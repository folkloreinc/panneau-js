webpackJsonp([486],{2535:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _baseWrapper2=_interopRequireDefault(__webpack_require__(2636)),_core2=_interopRequireDefault(__webpack_require__(2638)),_callbackNames=__webpack_require__(2631);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var FineUploaderTraditional=function(_BaseWrapper){function FineUploaderTraditional(_ref){var options=_ref.options;return function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,FineUploaderTraditional),function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}(this,(FineUploaderTraditional.__proto__||Object.getPrototypeOf(FineUploaderTraditional)).call(this,{callbackNames:_callbackNames.traditional,options:options,qq:_core2.default,type:"traditional"}))}return function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}(FineUploaderTraditional,_baseWrapper2.default),FineUploaderTraditional}();exports.default=FineUploaderTraditional},2600:function(module,exports,__webpack_require__){"use strict";var hasOwnProperty=Object.prototype.hasOwnProperty,propIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=function shouldUseNative(){try{if(!Object.assign)return!1;var test1=new String("abc");if(test1[5]="de","5"===Object.getOwnPropertyNames(test1)[0])return!1;for(var test2={},i=0;i<10;i++)test2["_"+String.fromCharCode(i)]=i;if("0123456789"!==Object.getOwnPropertyNames(test2).map(function(n){return test2[n]}).join(""))return!1;var test3={};return"abcdefghijklmnopqrst".split("").forEach(function(letter){test3[letter]=letter}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},test3)).join("")}catch(e){return!1}}()?Object.assign:function(target,source){for(var from,symbols,to=function toObject(val){if(null===val||void 0===val)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(val)}(target),s=1;s<arguments.length;s++){for(var key in from=Object(arguments[s]))hasOwnProperty.call(from,key)&&(to[key]=from[key]);if(Object.getOwnPropertySymbols){symbols=Object.getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++)propIsEnumerable.call(from,symbols[i])&&(to[symbols[i]]=from[symbols[i]])}}return to}},2631:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.s3=exports.traditional=exports.thenable=void 0;var _objectAssign2=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__(2600));exports.thenable=["onCancel","onPasteReceived","onSubmit","onSubmitDelete","onUpload","onUploadChunk","onValidate","onValidateBatch"];var traditional=exports.traditional=["onAutoRetry","onCancel","onComplete","onAllComplete","onDelete","onDeleteComplete","onError","onManualRetry","onPasteReceived","onProgress","onResume","onSessionRequestComplete","onStatusChange","onSubmit","onSubmitDelete","onSubmitted","onTotalProgress","onUpload","onUploadChunk","onUploadChunkSuccess","onValidate","onValidateBatch"];exports.s3=(0,_objectAssign2.default)([],traditional,["onCredentialsExpired"])},2636:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_objectAssign2=_interopRequireDefault(__webpack_require__(2600)),_callbackProxy2=_interopRequireDefault(__webpack_require__(2637));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var callbackProxies=new WeakMap,BaseWrapper=function(){function BaseWrapper(_ref){var callbackNames=_ref.callbackNames,options=_ref.options,qq=_ref.qq,type=_ref.type;!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,BaseWrapper);var callbacks=options.callbacks||{},optionsSansCallbacks=(0,_objectAssign2.default)({},options);delete optionsSansCallbacks.callbacks,this.options=optionsSansCallbacks,callbackProxies.set(this,createCallbackProxies(callbackNames)),registerOptionsCallbacks({callbacks:callbacks,callbackProxies:callbackProxies.get(this)}),this.methods=createFineUploader({callbackProxies:callbackProxies.get(this),options:optionsSansCallbacks,qq:qq,type:type}),this.qq=qq}return _createClass(BaseWrapper,[{key:"off",value:function off(name,callback){var normalizedName=normalizeCallbackName(name);callbackProxies.get(this)[normalizedName].remove(callback)}},{key:"on",value:function on(name,callback){var normalizedName=normalizeCallbackName(name);callbackProxies.get(this)[normalizedName].add(callback)}}]),BaseWrapper}();exports.default=BaseWrapper;var createCallbackProxies=function createCallbackProxies(names){var proxyMap={};return names.forEach(function(callbackName){proxyMap[callbackName]=new _callbackProxy2.default(callbackName)}),proxyMap},createFineUploader=function createFineUploader(_ref2){var callbackProxies=_ref2.callbackProxies,options=_ref2.options,qq=_ref2.qq,type=_ref2.type,optionsCopy=(0,_objectAssign2.default)({callbacks:{}},options);return Object.keys(callbackProxies).forEach(function(callbackName){var proxy=callbackProxies[callbackName];optionsCopy.callbacks[callbackName]=proxy.proxyFunction}),"traditional"===type?new qq.FineUploaderBasic(optionsCopy):new qq[type].FineUploaderBasic(optionsCopy)},normalizeCallbackName=function normalizeCallbackName(name){return name.match(/^on[A-Z]/)?name:"on"+name[0].toUpperCase()+name.slice(1)},registerOptionsCallbacks=function registerOptionsCallbacks(_ref3){var callbacks=_ref3.callbacks,callbackProxies=_ref3.callbackProxies;Object.keys(callbacks).forEach(function(callbackName){callbackProxies[callbackName].add(callbacks[callbackName])})}},2637:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_objectAssign2=function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(__webpack_require__(2600)),_callbackNames=__webpack_require__(2631);var privateData=new WeakMap,callbacks=new WeakMap,CallbackProxy=function(){function CallbackProxy(name){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,CallbackProxy),callbacks.set(this,[]),privateData.set(this,{name:name,proxyFunction:getProxyFunction.call(this,{name:name})})}return _createClass(CallbackProxy,[{key:"add",value:function add(callback){callbacks.get(this).push(callback)}},{key:"remove",value:function remove(callback){var index=callbacks.get(this).indexOf(callback);index>=0&&callbacks.get(this).splice(index,1)}},{key:"name",get:function get(){return privateData.get(this).name}},{key:"proxyFunction",get:function get(){return privateData.get(this).proxyFunction}}]),CallbackProxy}();exports.default=CallbackProxy;var getProxyFunction=function getProxyFunction(_ref){var name=_ref.name,proxyClassContext=this;return function(){for(var _len=arguments.length,originalCallbackArguments=Array(_len),_key=0;_key<_len;_key++)originalCallbackArguments[_key]=arguments[_key];var isThenable=_callbackNames.thenable.indexOf(name)>=0,registeredCallbacks=callbacks.get(proxyClassContext),callbackReturnValue=void 0;return isThenable?callbackReturnValue=executeThenableCallbacks({registeredCallbacks:registeredCallbacks,originalCallbackArguments:originalCallbackArguments}):(0,_objectAssign2.default)([],registeredCallbacks).every(function(callback){var returnValue=callback.apply(null,originalCallbackArguments);return callbackReturnValue=returnValue,!1!==returnValue}),callbackReturnValue}},executeThenableCallbacks=function executeThenableCallbacks(_ref2){var registeredCallbacks=_ref2.registeredCallbacks,originalCallbackArguments=_ref2.originalCallbackArguments;return registeredCallbacks.length?executeThenableCallback({registeredCallbacks:(0,_objectAssign2.default)([],registeredCallbacks).reverse(),originalCallbackArguments:originalCallbackArguments}):Promise.resolve()},getResultToPass=function getResultToPass(_ref3){var newResult=_ref3.newResult,previousResult=_ref3.previousResult;return null!==newResult&&"object"===(void 0===newResult?"undefined":_typeof(newResult))?(0,_objectAssign2.default)({},previousResult||{},newResult):newResult||previousResult},executeThenableCallback=function executeThenableCallback(_ref4){var registeredCallbacks=_ref4.registeredCallbacks,originalCallbackArguments=_ref4.originalCallbackArguments,previousResult=_ref4.previousResult;return new Promise(function(resolve,reject){var returnValue=registeredCallbacks.pop().apply(null,originalCallbackArguments);if(returnValue&&returnValue.then)returnValue.then(function(result){var resultToPass=getResultToPass({newResult:result,previousResult:previousResult});registeredCallbacks.length?executeThenableCallback({registeredCallbacks:registeredCallbacks,originalCallbackArguments:originalCallbackArguments,previousResult:resultToPass}).then(resolve,reject):resolve(resultToPass)}).catch(function(error){return reject(error)});else if(!1===returnValue)reject();else{var resultToPass=getResultToPass({newResult:returnValue,previousResult:previousResult});registeredCallbacks.length?executeThenableCallback({registeredCallbacks:registeredCallbacks,originalCallbackArguments:originalCallbackArguments,previousResult:resultToPass}).then(resolve,reject):resolve(resultToPass)}})}},2638:function(module,exports,__webpack_require__){"use strict";module.exports=__webpack_require__(2639)},2639:function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;!function(global){var qq=function(element){"use strict";return{hide:function(){return element.style.display="none",this},attach:function(type,fn){return element.addEventListener?element.addEventListener(type,fn,!1):element.attachEvent&&element.attachEvent("on"+type,fn),function(){qq(element).detach(type,fn)}},detach:function(type,fn){return element.removeEventListener?element.removeEventListener(type,fn,!1):element.attachEvent&&element.detachEvent("on"+type,fn),this},contains:function(descendant){return!!descendant&&(element===descendant||(element.contains?element.contains(descendant):!!(8&descendant.compareDocumentPosition(element))))},insertBefore:function(elementB){return elementB.parentNode.insertBefore(element,elementB),this},remove:function(){return element.parentNode.removeChild(element),this},css:function(styles){if(null==element.style)throw new qq.Error("Can't apply style to node as it is not on the HTMLElement prototype chain!");return null!=styles.opacity&&"string"!=typeof element.style.opacity&&void 0!==element.filters&&(styles.filter="alpha(opacity="+Math.round(100*styles.opacity)+")"),qq.extend(element.style,styles),this},hasClass:function(name,considerParent){var re=new RegExp("(^| )"+name+"( |$)");return re.test(element.className)||!(!considerParent||!re.test(element.parentNode.className))},addClass:function(name){return qq(element).hasClass(name)||(element.className+=" "+name),this},removeClass:function(name){var re=new RegExp("(^| )"+name+"( |$)");return element.className=element.className.replace(re," ").replace(/^\s+|\s+$/g,""),this},getByClass:function(className,first){var candidates,result=[];return first&&element.querySelector?element.querySelector("."+className):element.querySelectorAll?element.querySelectorAll("."+className):(candidates=element.getElementsByTagName("*"),qq.each(candidates,function(idx,val){qq(val).hasClass(className)&&result.push(val)}),first?result[0]:result)},getFirstByClass:function(className){return qq(element).getByClass(className,!0)},children:function(){for(var children=[],child=element.firstChild;child;)1===child.nodeType&&children.push(child),child=child.nextSibling;return children},setText:function(text){return element.innerText=text,element.textContent=text,this},clearText:function(){return qq(element).setText("")},hasAttribute:function(attrName){var attrVal;return element.hasAttribute?!!element.hasAttribute(attrName)&&null==/^false$/i.exec(element.getAttribute(attrName)):void 0!==(attrVal=element[attrName])&&null==/^false$/i.exec(attrVal)}}},ExifRestorer;!function(){"use strict";var div;qq.canvasToBlob=function(canvas,mime,quality){return qq.dataUriToBlob(canvas.toDataURL(mime,quality))},qq.dataUriToBlob=function(dataUri){var arrayBuffer,byteString,intArray,mimeString,data,mime,BlobBuilder,blobBuilder;return byteString=dataUri.split(",")[0].indexOf("base64")>=0?atob(dataUri.split(",")[1]):decodeURI(dataUri.split(",")[1]),mimeString=dataUri.split(",")[0].split(":")[1].split(";")[0],arrayBuffer=new ArrayBuffer(byteString.length),intArray=new Uint8Array(arrayBuffer),qq.each(byteString,function(idx,character){intArray[idx]=character.charCodeAt(0)}),data=arrayBuffer,mime=mimeString,BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,(blobBuilder=BlobBuilder&&new BlobBuilder)?(blobBuilder.append(data),blobBuilder.getBlob(mime)):new Blob([data],{type:mime})},qq.log=function(message,level){window.console&&(level&&"info"!==level?window.console[level]?window.console[level](message):window.console.log("<"+level+"> "+message):window.console.log(message))},qq.isObject=function(variable){return variable&&!variable.nodeType&&"[object Object]"===Object.prototype.toString.call(variable)},qq.isFunction=function(variable){return"function"==typeof variable},qq.isArray=function(value){return"[object Array]"===Object.prototype.toString.call(value)||value&&window.ArrayBuffer&&value.buffer&&value.buffer.constructor===ArrayBuffer},qq.isItemList=function(maybeItemList){return"[object DataTransferItemList]"===Object.prototype.toString.call(maybeItemList)},qq.isNodeList=function(maybeNodeList){return"[object NodeList]"===Object.prototype.toString.call(maybeNodeList)||maybeNodeList.item&&maybeNodeList.namedItem},qq.isString=function(maybeString){return"[object String]"===Object.prototype.toString.call(maybeString)},qq.trimStr=function(string){return String.prototype.trim?string.trim():string.replace(/^\s+|\s+$/g,"")},qq.format=function(str){var args=Array.prototype.slice.call(arguments,1),newStr=str,nextIdxToReplace=newStr.indexOf("{}");return qq.each(args,function(idx,val){var strBefore=newStr.substring(0,nextIdxToReplace),strAfter=newStr.substring(nextIdxToReplace+2);if((nextIdxToReplace=(newStr=strBefore+val+strAfter).indexOf("{}",nextIdxToReplace+val.length))<0)return!1}),newStr},qq.isFile=function(maybeFile){return window.File&&"[object File]"===Object.prototype.toString.call(maybeFile)},qq.isFileList=function(maybeFileList){return window.FileList&&"[object FileList]"===Object.prototype.toString.call(maybeFileList)},qq.isFileOrInput=function(maybeFileOrInput){return qq.isFile(maybeFileOrInput)||qq.isInput(maybeFileOrInput)},qq.isInput=function(maybeInput,notFile){var evaluateType=function(type){var normalizedType=type.toLowerCase();return notFile?"file"!==normalizedType:"file"===normalizedType};return!!(window.HTMLInputElement&&"[object HTMLInputElement]"===Object.prototype.toString.call(maybeInput)&&maybeInput.type&&evaluateType(maybeInput.type))||!!(maybeInput.tagName&&"input"===maybeInput.tagName.toLowerCase()&&maybeInput.type&&evaluateType(maybeInput.type))},qq.isBlob=function(maybeBlob){if(window.Blob&&"[object Blob]"===Object.prototype.toString.call(maybeBlob))return!0},qq.isXhrUploadSupported=function(){var input=document.createElement("input");return input.type="file",void 0!==input.multiple&&"undefined"!=typeof File&&"undefined"!=typeof FormData&&void 0!==qq.createXhrInstance().upload},qq.createXhrInstance=function(){if(window.XMLHttpRequest)return new XMLHttpRequest;try{return new ActiveXObject("MSXML2.XMLHTTP.3.0")}catch(error){return qq.log("Neither XHR or ActiveX are supported!","error"),null}},qq.isFolderDropSupported=function(dataTransfer){return dataTransfer.items&&dataTransfer.items.length>0&&dataTransfer.items[0].webkitGetAsEntry},qq.isFileChunkingSupported=function(){return!qq.androidStock()&&qq.isXhrUploadSupported()&&(void 0!==File.prototype.slice||void 0!==File.prototype.webkitSlice||void 0!==File.prototype.mozSlice)},qq.sliceBlob=function(fileOrBlob,start,end){return(fileOrBlob.slice||fileOrBlob.mozSlice||fileOrBlob.webkitSlice).call(fileOrBlob,start,end)},qq.arrayBufferToHex=function(buffer){var bytesAsHex="",bytes=new Uint8Array(buffer);return qq.each(bytes,function(idx,byt){var byteAsHexStr=byt.toString(16);byteAsHexStr.length<2&&(byteAsHexStr="0"+byteAsHexStr),bytesAsHex+=byteAsHexStr}),bytesAsHex},qq.readBlobToHex=function(blob,startOffset,length){var initialBlob=qq.sliceBlob(blob,startOffset,startOffset+length),fileReader=new FileReader,promise=new qq.Promise;return fileReader.onload=function(){promise.success(qq.arrayBufferToHex(fileReader.result))},fileReader.onerror=promise.failure,fileReader.readAsArrayBuffer(initialBlob),promise},qq.extend=function(first,second,extendNested){return qq.each(second,function(prop,val){extendNested&&qq.isObject(val)?(void 0===first[prop]&&(first[prop]={}),qq.extend(first[prop],val,!0)):first[prop]=val}),first},qq.override=function(target,sourceFn){var super_={},source=sourceFn(super_);return qq.each(source,function(srcPropName,srcPropVal){void 0!==target[srcPropName]&&(super_[srcPropName]=target[srcPropName]),target[srcPropName]=srcPropVal}),target},qq.indexOf=function(arr,elt,from){if(arr.indexOf)return arr.indexOf(elt,from);from=from||0;var len=arr.length;for(from<0&&(from+=len);from<len;from+=1)if(arr.hasOwnProperty(from)&&arr[from]===elt)return from;return-1},qq.getUniqueId=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0;return("x"==c?r:3&r|8).toString(16)})},qq.ie=function(){return-1!==navigator.userAgent.indexOf("MSIE")||-1!==navigator.userAgent.indexOf("Trident")},qq.ie7=function(){return-1!==navigator.userAgent.indexOf("MSIE 7")},qq.ie8=function(){return-1!==navigator.userAgent.indexOf("MSIE 8")},qq.ie10=function(){return-1!==navigator.userAgent.indexOf("MSIE 10")},qq.ie11=function(){return qq.ie()&&-1!==navigator.userAgent.indexOf("rv:11")},qq.edge=function(){return navigator.userAgent.indexOf("Edge")>=0},qq.safari=function(){return void 0!==navigator.vendor&&-1!==navigator.vendor.indexOf("Apple")},qq.chrome=function(){return void 0!==navigator.vendor&&-1!==navigator.vendor.indexOf("Google")},qq.opera=function(){return void 0!==navigator.vendor&&-1!==navigator.vendor.indexOf("Opera")},qq.firefox=function(){return!qq.edge()&&!qq.ie11()&&-1!==navigator.userAgent.indexOf("Mozilla")&&void 0!==navigator.vendor&&""===navigator.vendor},qq.windows=function(){return"Win32"===navigator.platform},qq.android=function(){return-1!==navigator.userAgent.toLowerCase().indexOf("android")},qq.androidStock=function(){return qq.android()&&navigator.userAgent.toLowerCase().indexOf("chrome")<0},qq.ios6=function(){return qq.ios()&&-1!==navigator.userAgent.indexOf(" OS 6_")},qq.ios7=function(){return qq.ios()&&-1!==navigator.userAgent.indexOf(" OS 7_")},qq.ios8=function(){return qq.ios()&&-1!==navigator.userAgent.indexOf(" OS 8_")},qq.ios800=function(){return qq.ios()&&-1!==navigator.userAgent.indexOf(" OS 8_0 ")},qq.ios=function(){return-1!==navigator.userAgent.indexOf("iPad")||-1!==navigator.userAgent.indexOf("iPod")||-1!==navigator.userAgent.indexOf("iPhone")},qq.iosChrome=function(){return qq.ios()&&-1!==navigator.userAgent.indexOf("CriOS")},qq.iosSafari=function(){return qq.ios()&&!qq.iosChrome()&&-1!==navigator.userAgent.indexOf("Safari")},qq.iosSafariWebView=function(){return qq.ios()&&!qq.iosChrome()&&!qq.iosSafari()},qq.preventDefault=function(e){e.preventDefault?e.preventDefault():e.returnValue=!1},qq.toElement=(div=document.createElement("div"),function(html){div.innerHTML=html;var element=div.firstChild;return div.removeChild(element),element}),qq.each=function(iterableItem,callback){var keyOrIndex;if(iterableItem)if(window.Storage&&iterableItem.constructor===window.Storage)for(keyOrIndex=0;keyOrIndex<iterableItem.length&&!1!==callback(iterableItem.key(keyOrIndex),iterableItem.getItem(iterableItem.key(keyOrIndex)));keyOrIndex++);else if(qq.isArray(iterableItem)||qq.isItemList(iterableItem)||qq.isNodeList(iterableItem))for(keyOrIndex=0;keyOrIndex<iterableItem.length&&!1!==callback(keyOrIndex,iterableItem[keyOrIndex]);keyOrIndex++);else if(qq.isString(iterableItem))for(keyOrIndex=0;keyOrIndex<iterableItem.length&&!1!==callback(keyOrIndex,iterableItem.charAt(keyOrIndex));keyOrIndex++);else for(keyOrIndex in iterableItem)if(Object.prototype.hasOwnProperty.call(iterableItem,keyOrIndex)&&!1===callback(keyOrIndex,iterableItem[keyOrIndex]))break},qq.bind=function(oldFunc,context){if(qq.isFunction(oldFunc)){var args=Array.prototype.slice.call(arguments,2);return function(){var newArgs=qq.extend([],args);return arguments.length&&(newArgs=newArgs.concat(Array.prototype.slice.call(arguments))),oldFunc.apply(context,newArgs)}}throw new Error("first parameter must be a function!")},qq.obj2url=function(obj,temp,prefixDone){var uristrings=[],prefix="&",add=function(nextObj,i){var nextTemp=temp?/\[\]$/.test(temp)?temp:temp+"["+i+"]":i;"undefined"!==nextTemp&&"undefined"!==i&&uristrings.push("object"==typeof nextObj?qq.obj2url(nextObj,nextTemp,!0):"[object Function]"===Object.prototype.toString.call(nextObj)?encodeURIComponent(nextTemp)+"="+encodeURIComponent(nextObj()):encodeURIComponent(nextTemp)+"="+encodeURIComponent(nextObj))};return!prefixDone&&temp?(prefix=/\?/.test(temp)?/\?$/.test(temp)?"":"&":"?",uristrings.push(temp),uristrings.push(qq.obj2url(obj))):"[object Array]"===Object.prototype.toString.call(obj)&&void 0!==obj?qq.each(obj,function(idx,val){add(val,idx)}):void 0!==obj&&null!==obj&&"object"==typeof obj?qq.each(obj,function(prop,val){add(val,prop)}):uristrings.push(encodeURIComponent(temp)+"="+encodeURIComponent(obj)),temp?uristrings.join(prefix):uristrings.join(prefix).replace(/^&/,"").replace(/%20/g,"+")},qq.obj2FormData=function(obj,formData,arrayKeyName){return formData||(formData=new FormData),qq.each(obj,function(key,val){key=arrayKeyName?arrayKeyName+"["+key+"]":key,qq.isObject(val)?qq.obj2FormData(val,formData,key):qq.isFunction(val)?formData.append(key,val()):formData.append(key,val)}),formData},qq.obj2Inputs=function(obj,form){var input;return form||(form=document.createElement("form")),qq.obj2FormData(obj,{append:function(key,val){(input=document.createElement("input")).setAttribute("name",key),input.setAttribute("value",val),form.appendChild(input)}}),form},qq.parseJson=function(json){return window.JSON&&qq.isFunction(JSON.parse)?JSON.parse(json):eval("("+json+")")},qq.getExtension=function(filename){var extIdx=filename.lastIndexOf(".")+1;if(extIdx>0)return filename.substr(extIdx,filename.length-extIdx)},qq.getFilename=function(blobOrFileInput){return qq.isInput(blobOrFileInput)?blobOrFileInput.value.replace(/.*(\/|\\)/,""):qq.isFile(blobOrFileInput)&&null!==blobOrFileInput.fileName&&void 0!==blobOrFileInput.fileName?blobOrFileInput.fileName:blobOrFileInput.name},qq.DisposeSupport=function(){var disposers=[];return{dispose:function(){var disposer;do{(disposer=disposers.shift())&&disposer()}while(disposer)},attach:function(){var args=arguments;this.addDisposer(qq(args[0]).attach.apply(this,Array.prototype.slice.call(arguments,1)))},addDisposer:function(disposeFunction){disposers.push(disposeFunction)}}}}(),function(){"use strict";void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return qq}.call(exports,__webpack_require__,exports,module))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}(),function(){"use strict";qq.Error=function(message){this.message="[Fine Uploader "+qq.version+"] "+message},qq.Error.prototype=new Error}(),qq.version="5.16.2",qq.supportedFeatures=function(){"use strict";var supportsUploading,supportsUploadingBlobs,supportsFileDrop,supportsAjaxFileUploading,supportsFolderDrop,supportsChunking,supportsResume,supportsUploadViaPaste,supportsUploadCors,supportsDeleteFileXdr,supportsDeleteFileCorsXhr,supportsDeleteFileCors,supportsFolderSelection,supportsImagePreviews,supportsUploadProgress,input;function isCrossOriginXhrSupported(){return!!window.XMLHttpRequest&&void 0!==qq.createXhrInstance().withCredentials}function isXdrSupported(){return void 0!==window.XDomainRequest}return supportsUploading=function testSupportsFileInputElement(){var tempInput,supported=!0;try{(tempInput=document.createElement("input")).type="file",qq(tempInput).hide(),tempInput.disabled&&(supported=!1)}catch(ex){supported=!1}return supported}(),supportsUploadingBlobs=(supportsAjaxFileUploading=supportsUploading&&qq.isXhrUploadSupported())&&!qq.androidStock(),supportsFolderDrop=(supportsFileDrop=supportsAjaxFileUploading&&function isDragAndDropSupported(){var span=document.createElement("span");return("draggable"in span||"ondragstart"in span&&"ondrop"in span)&&!qq.android()&&!qq.ios()}())&&((input=document.createElement("input")).type="file",!!("webkitdirectory"in(input||document.querySelectorAll("input[type=file]")[0]))),supportsChunking=supportsAjaxFileUploading&&qq.isFileChunkingSupported(),supportsResume=supportsAjaxFileUploading&&supportsChunking&&function isLocalStorageSupported(){try{return!!window.localStorage&&qq.isFunction(window.localStorage.setItem)}catch(error){return!1}}(),supportsUploadViaPaste=supportsAjaxFileUploading&&function isChrome14OrHigher(){return(qq.chrome()||qq.opera())&&void 0!==navigator.userAgent.match(/Chrome\/[1][4-9]|Chrome\/[2-9][0-9]/)}(),supportsUploadCors=supportsUploading&&(void 0!==window.postMessage||supportsAjaxFileUploading),supportsDeleteFileCorsXhr=isCrossOriginXhrSupported(),supportsDeleteFileXdr=isXdrSupported(),supportsDeleteFileCors=function isCrossOriginAjaxSupported(){return!!isCrossOriginXhrSupported()||isXdrSupported()}(),supportsFolderSelection=function isFolderSelectionSupported(){return void 0!==document.createElement("input").webkitdirectory}(),supportsImagePreviews=supportsAjaxFileUploading&&void 0!==window.FileReader,supportsUploadProgress=!!supportsAjaxFileUploading&&!qq.androidStock()&&!qq.iosChrome(),{ajaxUploading:supportsAjaxFileUploading,blobUploading:supportsUploadingBlobs,canDetermineSize:supportsAjaxFileUploading,chunking:supportsChunking,deleteFileCors:supportsDeleteFileCors,deleteFileCorsXdr:supportsDeleteFileXdr,deleteFileCorsXhr:supportsDeleteFileCorsXhr,dialogElement:!!window.HTMLDialogElement,fileDrop:supportsFileDrop,folderDrop:supportsFolderDrop,folderSelection:supportsFolderSelection,imagePreviews:supportsImagePreviews,imageValidation:supportsImagePreviews,itemSizeValidation:supportsAjaxFileUploading,pause:supportsChunking,progressBar:supportsUploadProgress,resume:supportsResume,scaling:supportsImagePreviews&&supportsUploadingBlobs,tiffPreviews:qq.safari(),unlimitedScaledImageSize:!qq.ios(),uploading:supportsUploading,uploadCors:supportsUploadCors,uploadCustomHeaders:supportsAjaxFileUploading,uploadNonMultipart:supportsAjaxFileUploading,uploadViaPaste:supportsUploadViaPaste}}(),qq.isGenericPromise=function(maybePromise){"use strict";return!!(maybePromise&&maybePromise.then&&qq.isFunction(maybePromise.then))},qq.Promise=function(){"use strict";var successArgs,failureArgs,successCallbacks=[],failureCallbacks=[],doneCallbacks=[],state=0;qq.extend(this,{then:function(onSuccess,onFailure){return 0===state?(onSuccess&&successCallbacks.push(onSuccess),onFailure&&failureCallbacks.push(onFailure)):-1===state?onFailure&&onFailure.apply(null,failureArgs):onSuccess&&onSuccess.apply(null,successArgs),this},done:function(callback){return 0===state?doneCallbacks.push(callback):callback.apply(null,void 0===failureArgs?successArgs:failureArgs),this},success:function(){return state=1,successArgs=arguments,successCallbacks.length&&qq.each(successCallbacks,function(idx,callback){callback.apply(null,successArgs)}),doneCallbacks.length&&qq.each(doneCallbacks,function(idx,callback){callback.apply(null,successArgs)}),this},failure:function(){return state=-1,failureArgs=arguments,failureCallbacks.length&&qq.each(failureCallbacks,function(idx,callback){callback.apply(null,failureArgs)}),doneCallbacks.length&&qq.each(doneCallbacks,function(idx,callback){callback.apply(null,failureArgs)}),this}})},qq.BlobProxy=function(referenceBlob,onCreate){"use strict";qq.extend(this,{referenceBlob:referenceBlob,create:function(){return onCreate(referenceBlob)}})},qq.UploadButton=function(o){"use strict";var input,buttonId,self=this,disposeSupport=new qq.DisposeSupport,options={acceptFiles:null,element:null,focusClass:"qq-upload-button-focus",folders:!1,hoverClass:"qq-upload-button-hover",ios8BrowserCrashWorkaround:!1,multiple:!1,name:"qqfile",onChange:function(input){},title:null};function createInput(){var input=document.createElement("input");return input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME,buttonId),input.setAttribute("title",options.title),self.setMultiple(options.multiple,input),options.folders&&qq.supportedFeatures.folderSelection&&input.setAttribute("webkitdirectory",""),options.acceptFiles&&input.setAttribute("accept",options.acceptFiles),input.setAttribute("type","file"),input.setAttribute("name",options.name),qq(input).css({position:"absolute",right:0,top:0,fontFamily:"Arial",fontSize:qq.ie()&&!qq.ie8()?"3500px":"118px",margin:0,padding:0,cursor:"pointer",opacity:0}),!qq.ie7()&&qq(input).css({height:"100%"}),options.element.appendChild(input),disposeSupport.attach(input,"change",function(){options.onChange(input)}),disposeSupport.attach(input,"mouseover",function(){qq(options.element).addClass(options.hoverClass)}),disposeSupport.attach(input,"mouseout",function(){qq(options.element).removeClass(options.hoverClass)}),disposeSupport.attach(input,"focus",function(){qq(options.element).addClass(options.focusClass)}),disposeSupport.attach(input,"blur",function(){qq(options.element).removeClass(options.focusClass)}),input}qq.extend(options,o),buttonId=qq.getUniqueId(),qq(options.element).css({position:"relative",overflow:"hidden",direction:"ltr"}),qq.extend(this,{getInput:function(){return input},getButtonId:function(){return buttonId},setMultiple:function(isMultiple,optInput){var input=optInput||this.getInput();options.ios8BrowserCrashWorkaround&&qq.ios8()&&(qq.iosChrome()||qq.iosSafariWebView())?input.setAttribute("multiple",""):isMultiple?input.setAttribute("multiple",""):input.removeAttribute("multiple")},setAcceptFiles:function(acceptFiles){acceptFiles!==options.acceptFiles&&input.setAttribute("accept",acceptFiles)},reset:function(){input.parentNode&&qq(input).remove(),qq(options.element).removeClass(options.focusClass),input=null,input=createInput()}}),input=createInput()},qq.UploadButton.BUTTON_ID_ATTR_NAME="qq-button-id",qq.UploadData=function(uploaderProxy){"use strict";var data=[],byUuid={},byStatus={},byProxyGroupId={},byBatchId={};function getDataByIds(idOrIds){if(qq.isArray(idOrIds)){var entries=[];return qq.each(idOrIds,function(idx,id){entries.push(data[id])}),entries}return data[idOrIds]}qq.extend(this,{addFile:function(spec){var status=spec.status||qq.status.SUBMITTING,id=data.push({name:spec.name,originalName:spec.name,uuid:spec.uuid,size:null==spec.size?-1:spec.size,status:status,file:spec.file})-1;return spec.batchId&&(data[id].batchId=spec.batchId,void 0===byBatchId[spec.batchId]&&(byBatchId[spec.batchId]=[]),byBatchId[spec.batchId].push(id)),spec.proxyGroupId&&(data[id].proxyGroupId=spec.proxyGroupId,void 0===byProxyGroupId[spec.proxyGroupId]&&(byProxyGroupId[spec.proxyGroupId]=[]),byProxyGroupId[spec.proxyGroupId].push(id)),data[id].id=id,byUuid[spec.uuid]=id,void 0===byStatus[status]&&(byStatus[status]=[]),byStatus[status].push(id),spec.onBeforeStatusChange&&spec.onBeforeStatusChange(id),uploaderProxy.onStatusChange(id,null,status),id},retrieve:function(optionalFilter){return qq.isObject(optionalFilter)&&data.length?void 0!==optionalFilter.id?getDataByIds(optionalFilter.id):void 0!==optionalFilter.uuid?function getDataByUuids(uuids){if(qq.isArray(uuids)){var entries=[];return qq.each(uuids,function(idx,uuid){entries.push(data[byUuid[uuid]])}),entries}return data[byUuid[uuids]]}(optionalFilter.uuid):optionalFilter.status?function getDataByStatus(status){var statusResults=[],statuses=[].concat(status);return qq.each(statuses,function(index,statusEnum){var statusResultIndexes=byStatus[statusEnum];void 0!==statusResultIndexes&&qq.each(statusResultIndexes,function(i,dataIndex){statusResults.push(data[dataIndex])})}),statusResults}(optionalFilter.status):void 0:qq.extend([],data,!0)},removeFileRef:function(id){var record=getDataByIds(id);record&&delete record.file},reset:function(){data=[],byUuid={},byStatus={},byBatchId={}},setStatus:function(id,newStatus){var oldStatus=data[id].status,byStatusOldStatusIndex=qq.indexOf(byStatus[oldStatus],id);byStatus[oldStatus].splice(byStatusOldStatusIndex,1),data[id].status=newStatus,void 0===byStatus[newStatus]&&(byStatus[newStatus]=[]),byStatus[newStatus].push(id),uploaderProxy.onStatusChange(id,oldStatus,newStatus)},uuidChanged:function(id,newUuid){var oldUuid=data[id].uuid;data[id].uuid=newUuid,byUuid[newUuid]=id,delete byUuid[oldUuid]},updateName:function(id,newName){data[id].name=newName},updateSize:function(id,newSize){data[id].size=newSize},setParentId:function(targetId,parentId){data[targetId].parentId=parentId},getIdsInProxyGroup:function(id){var proxyGroupId=data[id].proxyGroupId;return proxyGroupId?byProxyGroupId[proxyGroupId]:[]},getIdsInBatch:function(id){var batchId=data[id].batchId;return byBatchId[batchId]}})},qq.status={SUBMITTING:"submitting",SUBMITTED:"submitted",REJECTED:"rejected",QUEUED:"queued",CANCELED:"canceled",PAUSED:"paused",UPLOADING:"uploading",UPLOAD_FINALIZING:"upload finalizing",UPLOAD_RETRYING:"retrying upload",UPLOAD_SUCCESSFUL:"upload successful",UPLOAD_FAILED:"upload failed",DELETE_FAILED:"delete failed",DELETING:"deleting",DELETED:"deleted"},function(){"use strict";qq.basePublicApi={addBlobs:function(blobDataOrArray,params,endpoint){this.addFiles(blobDataOrArray,params,endpoint)},addInitialFiles:function(cannedFileList){var self=this;qq.each(cannedFileList,function(index,cannedFile){self._addCannedFile(cannedFile)})},addFiles:function(data,params,endpoint){this._maybeHandleIos8SafariWorkaround();var batchId=0===this._storedIds.length?qq.getUniqueId():this._currentBatchId,processBlob=qq.bind(function(blob){this._handleNewFile({blob:blob,name:this._options.blobs.defaultName},batchId,verifiedFiles)},this),processBlobData=qq.bind(function(blobData){this._handleNewFile(blobData,batchId,verifiedFiles)},this),processCanvas=qq.bind(function(canvas){var blob=qq.canvasToBlob(canvas);this._handleNewFile({blob:blob,name:this._options.blobs.defaultName+".png"},batchId,verifiedFiles)},this),processCanvasData=qq.bind(function(canvasData){var normalizedQuality=canvasData.quality&&canvasData.quality/100,blob=qq.canvasToBlob(canvasData.canvas,canvasData.type,normalizedQuality);this._handleNewFile({blob:blob,name:canvasData.name},batchId,verifiedFiles)},this),processFileOrInput=qq.bind(function(fileOrInput){if(qq.isInput(fileOrInput)&&qq.supportedFeatures.ajaxUploading){var files=Array.prototype.slice.call(fileOrInput.files),self=this;qq.each(files,function(idx,file){self._handleNewFile(file,batchId,verifiedFiles)})}else this._handleNewFile(fileOrInput,batchId,verifiedFiles)},this),self=this,verifiedFiles=[];this._currentBatchId=batchId,data&&(qq.isFileList(data)&&(data=Array.prototype.slice.call(data)),data=[].concat(data),qq.each(data,function(idx,fileContainer){qq.isFileOrInput(fileContainer)?processFileOrInput(fileContainer):qq.isBlob(fileContainer)?processBlob(fileContainer):qq.isObject(fileContainer)?fileContainer.blob&&fileContainer.name?processBlobData(fileContainer):fileContainer.canvas&&fileContainer.name&&processCanvasData(fileContainer):fileContainer.tagName&&"canvas"===fileContainer.tagName.toLowerCase()?processCanvas(fileContainer):self.log(fileContainer+" is not a valid file container!  Ignoring!","warn")}),this.log("Received "+verifiedFiles.length+" files."),this._prepareItemsForUpload(verifiedFiles,params,endpoint))},cancel:function(id){var uploadData=this._uploadData.retrieve({id:id});uploadData&&uploadData.status===qq.status.UPLOAD_FINALIZING?this.log(qq.format("Ignoring cancel for file ID {} ({}).  Finalizing upload.",id,this.getName(id)),"error"):this._handler.cancel(id)},cancelAll:function(){var storedIdsCopy=[],self=this;qq.extend(storedIdsCopy,this._storedIds),qq.each(storedIdsCopy,function(idx,storedFileId){self.cancel(storedFileId)}),this._handler.cancelAll()},clearStoredFiles:function(){this._storedIds=[]},continueUpload:function(id){var uploadData=this._uploadData.retrieve({id:id});return!(!qq.supportedFeatures.pause||!this._options.chunking.enabled)&&(uploadData.status===qq.status.PAUSED?(this.log(qq.format("Paused file ID {} ({}) will be continued.  Not paused.",id,this.getName(id))),this._uploadFile(id),!0):(this.log(qq.format("Ignoring continue for file ID {} ({}).  Not paused.",id,this.getName(id)),"error"),!1))},deleteFile:function(id){return this._onSubmitDelete(id)},doesExist:function(fileOrBlobId){return this._handler.isValid(fileOrBlobId)},drawThumbnail:function(fileId,imgOrCanvas,maxSize,fromServer,customResizeFunction){var fileOrUrl,options,promiseToReturn=new qq.Promise;return this._imageGenerator?(fileOrUrl=this._thumbnailUrls[fileId],options={customResizeFunction:customResizeFunction,maxSize:maxSize>0?maxSize:null,scale:maxSize>0},!fromServer&&qq.supportedFeatures.imagePreviews&&(fileOrUrl=this.getFile(fileId)),null==fileOrUrl?promiseToReturn.failure({container:imgOrCanvas,error:"File or URL not found."}):this._imageGenerator.generate(fileOrUrl,imgOrCanvas,options).then(function success(modifiedContainer){promiseToReturn.success(modifiedContainer)},function failure(container,reason){promiseToReturn.failure({container:container,error:reason||"Problem generating thumbnail"})})):promiseToReturn.failure({container:imgOrCanvas,error:"Missing image generator module"}),promiseToReturn},getButton:function(fileId){return this._getButton(this._buttonIdsForFileIds[fileId])},getEndpoint:function(fileId){return this._endpointStore.get(fileId)},getFile:function(fileOrBlobId){var uploadDataRecord,file=this._handler.getFile(fileOrBlobId);return file||(uploadDataRecord=this._uploadData.retrieve({id:fileOrBlobId}))&&(file=uploadDataRecord.file),file||null},getInProgress:function(){return this._uploadData.retrieve({status:[qq.status.UPLOADING,qq.status.UPLOAD_RETRYING,qq.status.QUEUED]}).length},getName:function(id){return this._uploadData.retrieve({id:id}).name},getParentId:function(id){var uploadDataEntry=this.getUploads({id:id}),parentId=null;return uploadDataEntry&&void 0!==uploadDataEntry.parentId&&(parentId=uploadDataEntry.parentId),parentId},getResumableFilesData:function(){return this._handler.getResumableFilesData()},getSize:function(id){return this._uploadData.retrieve({id:id}).size},getNetUploads:function(){return this._netUploaded},getRemainingAllowedItems:function(){var allowedItems=this._currentItemLimit;return allowedItems>0?allowedItems-this._netUploadedOrQueued:null},getUploads:function(optionalFilter){return this._uploadData.retrieve(optionalFilter)},getUuid:function(id){return this._uploadData.retrieve({id:id}).uuid},isResumable:function(id){return this._handler.hasResumeRecord(id)},log:function(str,level){!this._options.debug||level&&"info"!==level?level&&"info"!==level&&qq.log("[Fine Uploader "+qq.version+"] "+str,level):qq.log("[Fine Uploader "+qq.version+"] "+str)},pauseUpload:function(id){var uploadData=this._uploadData.retrieve({id:id});if(!qq.supportedFeatures.pause||!this._options.chunking.enabled)return!1;if(qq.indexOf([qq.status.UPLOADING,qq.status.UPLOAD_RETRYING],uploadData.status)>=0){if(this._handler.pause(id))return this._uploadData.setStatus(id,qq.status.PAUSED),!0;this.log(qq.format("Unable to pause file ID {} ({}).",id,this.getName(id)),"error")}else this.log(qq.format("Ignoring pause for file ID {} ({}).  Not in progress.",id,this.getName(id)),"error");return!1},removeFileRef:function(id){this._handler.expunge(id),this._uploadData.removeFileRef(id)},reset:function(){this.log("Resetting uploader..."),this._handler.reset(),this._storedIds=[],this._autoRetries=[],this._retryTimeouts=[],this._preventRetries=[],this._thumbnailUrls=[],qq.each(this._buttons,function(idx,button){button.reset()}),this._paramsStore.reset(),this._endpointStore.reset(),this._netUploadedOrQueued=0,this._netUploaded=0,this._uploadData.reset(),this._buttonIdsForFileIds=[],this._pasteHandler&&this._pasteHandler.reset(),this._options.session.refreshOnReset&&this._refreshSessionData(),this._succeededSinceLastAllComplete=[],this._failedSinceLastAllComplete=[],this._totalProgress&&this._totalProgress.reset(),this._customResumeDataStore.reset()},retry:function(id){return this._manualRetry(id)},scaleImage:function(id,specs){return qq.Scaler.prototype.scaleImage(id,specs,{log:qq.bind(this.log,this),getFile:qq.bind(this.getFile,this),uploadData:this._uploadData})},setCustomHeaders:function(headers,id){this._customHeadersStore.set(headers,id)},setCustomResumeData:function(id,data){this._customResumeDataStore.set(data,id)},setDeleteFileCustomHeaders:function(headers,id){this._deleteFileCustomHeadersStore.set(headers,id)},setDeleteFileEndpoint:function(endpoint,id){this._deleteFileEndpointStore.set(endpoint,id)},setDeleteFileParams:function(params,id){this._deleteFileParamsStore.set(params,id)},setEndpoint:function(endpoint,id){this._endpointStore.set(endpoint,id)},setForm:function(elementOrId){this._updateFormSupportAndParams(elementOrId)},setItemLimit:function(newItemLimit){this._currentItemLimit=newItemLimit},setName:function(id,newName){this._uploadData.updateName(id,newName)},setParams:function(params,id){this._paramsStore.set(params,id)},setUuid:function(id,newUuid){return this._uploadData.uuidChanged(id,newUuid)},setStatus:function(id,newStatus){if(!this.getUploads({id:id}))throw new qq.Error(id+" is not a valid file ID.");switch(newStatus){case qq.status.DELETED:this._onDeleteComplete(id,null,!1);break;case qq.status.DELETE_FAILED:this._onDeleteComplete(id,null,!0);break;default:var errorMessage="Method setStatus called on '"+name+"' not implemented yet for "+newStatus;throw this.log(errorMessage),new qq.Error(errorMessage)}},uploadStoredFiles:function(){0===this._storedIds.length?this._itemError("noFilesError"):this._uploadStoredFiles()}},qq.basePrivateApi={_addCannedFile:function(sessionData){var self=this;return this._uploadData.addFile({uuid:sessionData.uuid,name:sessionData.name,size:sessionData.size,status:qq.status.UPLOAD_SUCCESSFUL,onBeforeStatusChange:function(id){sessionData.deleteFileEndpoint&&self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint,id),sessionData.deleteFileParams&&self.setDeleteFileParams(sessionData.deleteFileParams,id),sessionData.thumbnailUrl&&(self._thumbnailUrls[id]=sessionData.thumbnailUrl),self._netUploaded++,self._netUploadedOrQueued++}})},_annotateWithButtonId:function(file,associatedInput){qq.isFile(file)&&(file.qqButtonId=this._getButtonId(associatedInput))},_batchError:function(message){this._options.callbacks.onError(null,null,message,void 0)},_createDeleteHandler:function(){var self=this;return new qq.DeleteFileAjaxRequester({method:this._options.deleteFile.method.toUpperCase(),maxConnections:this._options.maxConnections,uuidParamName:this._options.request.uuidName,customHeaders:this._deleteFileCustomHeadersStore,paramsStore:this._deleteFileParamsStore,endpointStore:this._deleteFileEndpointStore,cors:this._options.cors,log:qq.bind(self.log,self),onDelete:function(id){self._onDelete(id),self._options.callbacks.onDelete(id)},onDeleteComplete:function(id,xhrOrXdr,isError){self._onDeleteComplete(id,xhrOrXdr,isError),self._options.callbacks.onDeleteComplete(id,xhrOrXdr,isError)}})},_createPasteHandler:function(){var self=this;return new qq.PasteSupport({targetElement:this._options.paste.targetElement,callbacks:{log:qq.bind(self.log,self),pasteReceived:function(blob){self._handleCheckedCallback({name:"onPasteReceived",callback:qq.bind(self._options.callbacks.onPasteReceived,self,blob),onSuccess:qq.bind(self._handlePasteSuccess,self,blob),identifier:"pasted image"})}}})},_createStore:function(initialValue,_readOnlyValues_){var store={},catchall=initialValue,perIdReadOnlyValues={},readOnlyValues=_readOnlyValues_,copy=function(orig){return qq.isObject(orig)?qq.extend({},orig):orig},includeReadOnlyValues=function(id,existing){readOnlyValues&&qq.isObject(existing)&&qq.extend(existing,qq.isFunction(readOnlyValues)?readOnlyValues():readOnlyValues),perIdReadOnlyValues[id]&&qq.extend(existing,perIdReadOnlyValues[id])};return{set:function(val,id){null==id?(store={},catchall=copy(val)):store[id]=copy(val)},get:function(id){var values;return values=null!=id&&store[id]?store[id]:copy(catchall),includeReadOnlyValues(id,values),copy(values)},addReadOnly:function(id,values){qq.isObject(store)&&(null===id?qq.isFunction(values)?readOnlyValues=values:(readOnlyValues=readOnlyValues||{},qq.extend(readOnlyValues,values)):(perIdReadOnlyValues[id]=perIdReadOnlyValues[id]||{},qq.extend(perIdReadOnlyValues[id],values)))},remove:function(fileId){return delete store[fileId]},reset:function(){store={},perIdReadOnlyValues={},catchall=initialValue}}},_createUploadDataTracker:function(){var self=this;return new qq.UploadData({getName:function(id){return self.getName(id)},getUuid:function(id){return self.getUuid(id)},getSize:function(id){return self.getSize(id)},onStatusChange:function(id,oldStatus,newStatus){self._onUploadStatusChange(id,oldStatus,newStatus),self._options.callbacks.onStatusChange(id,oldStatus,newStatus),self._maybeAllComplete(id,newStatus),self._totalProgress&&setTimeout(function(){self._totalProgress.onStatusChange(id,oldStatus,newStatus)},0)}})},_createUploadButton:function(spec){var button,self=this,acceptFiles=spec.accept||this._options.validation.acceptFiles,allowedExtensions=spec.allowedExtensions||this._options.validation.allowedExtensions;return button=new qq.UploadButton({acceptFiles:acceptFiles,element:spec.element,focusClass:this._options.classes.buttonFocus,folders:spec.folders,hoverClass:this._options.classes.buttonHover,ios8BrowserCrashWorkaround:this._options.workarounds.ios8BrowserCrash,multiple:function allowMultiple(){return!!qq.supportedFeatures.ajaxUploading&&!(self._options.workarounds.iosEmptyVideos&&qq.ios()&&!qq.ios6()&&self._isAllowedExtension(allowedExtensions,".mov"))&&(void 0===spec.multiple?self._options.multiple:spec.multiple)}(),name:this._options.request.inputName,onChange:function(input){self._onInputChange(input)},title:null==spec.title?this._options.text.fileInputTitle:spec.title}),this._disposeSupport.addDisposer(function(){button.dispose()}),self._buttons.push(button),button},_createUploadHandler:function(additionalOptions,namespace){var self=this,lastOnProgress={},options={debug:this._options.debug,maxConnections:this._options.maxConnections,cors:this._options.cors,paramsStore:this._paramsStore,endpointStore:this._endpointStore,chunking:this._options.chunking,resume:this._options.resume,blobs:this._options.blobs,log:qq.bind(self.log,self),preventRetryParam:this._options.retry.preventRetryResponseProperty,onProgress:function(id,name,loaded,total){loaded<0||total<0||(lastOnProgress[id]&&lastOnProgress[id].loaded===loaded&&lastOnProgress[id].total===total||(self._onProgress(id,name,loaded,total),self._options.callbacks.onProgress(id,name,loaded,total)),lastOnProgress[id]={loaded:loaded,total:total})},onComplete:function(id,name,result,xhr){delete lastOnProgress[id];var retVal,status=self.getUploads({id:id}).status;status!==qq.status.UPLOAD_SUCCESSFUL&&status!==qq.status.UPLOAD_FAILED&&((retVal=self._onComplete(id,name,result,xhr))instanceof qq.Promise?retVal.done(function(){self._options.callbacks.onComplete(id,name,result,xhr)}):self._options.callbacks.onComplete(id,name,result,xhr))},onCancel:function(id,name,cancelFinalizationEffort){var promise=new qq.Promise;return self._handleCheckedCallback({name:"onCancel",callback:qq.bind(self._options.callbacks.onCancel,self,id,name),onFailure:promise.failure,onSuccess:function(){cancelFinalizationEffort.then(function(){self._onCancel(id,name)}),promise.success()},identifier:id}),promise},onUploadPrep:qq.bind(this._onUploadPrep,this),onUpload:function(id,name){self._onUpload(id,name);var onUploadResult=self._options.callbacks.onUpload(id,name);return qq.isGenericPromise(onUploadResult)?(self.log(qq.format("onUpload for {} returned a Promise - waiting for resolution.",id)),onUploadResult):(new qq.Promise).success()},onUploadChunk:function(id,name,chunkData){self._onUploadChunk(id,chunkData);var onUploadChunkResult=self._options.callbacks.onUploadChunk(id,name,chunkData);return qq.isGenericPromise(onUploadChunkResult)?(self.log(qq.format("onUploadChunk for {}.{} returned a Promise - waiting for resolution.",id,chunkData.partIndex)),onUploadChunkResult):(new qq.Promise).success()},onUploadChunkSuccess:function(id,chunkData,result,xhr){self._onUploadChunkSuccess(id,chunkData),self._options.callbacks.onUploadChunkSuccess.apply(self,arguments)},onResume:function(id,name,chunkData,customResumeData){return self._options.callbacks.onResume(id,name,chunkData,customResumeData)},onAutoRetry:function(id,name,responseJSON,xhr){return self._onAutoRetry.apply(self,arguments)},onUuidChanged:function(id,newUuid){self.log("Server requested UUID change from '"+self.getUuid(id)+"' to '"+newUuid+"'"),self.setUuid(id,newUuid)},getName:qq.bind(self.getName,self),getUuid:qq.bind(self.getUuid,self),getSize:qq.bind(self.getSize,self),setSize:qq.bind(self._setSize,self),getDataByUuid:function(uuid){return self.getUploads({uuid:uuid})},isQueued:function(id){var status=self.getUploads({id:id}).status;return status===qq.status.QUEUED||status===qq.status.SUBMITTED||status===qq.status.UPLOAD_RETRYING||status===qq.status.PAUSED},getIdsInProxyGroup:self._uploadData.getIdsInProxyGroup,getIdsInBatch:self._uploadData.getIdsInBatch,isInProgress:function(id){return self.getUploads({id:id}).status===qq.status.UPLOADING},getCustomResumeData:qq.bind(self._getCustomResumeData,self),setStatus:function(id,status){self._uploadData.setStatus(id,status)}};return qq.each(this._options.request,function(prop,val){options[prop]=val}),options.customHeaders=this._customHeadersStore,additionalOptions&&qq.each(additionalOptions,function(key,val){options[key]=val}),new qq.UploadHandlerController(options,namespace)},_fileOrBlobRejected:function(id){this._netUploadedOrQueued--,this._uploadData.setStatus(id,qq.status.REJECTED)},_formatSize:function(bytes){if(0===bytes)return bytes+this._options.text.sizeSymbols[0];var i=-1;do{bytes/=1e3,i++}while(bytes>999);return Math.max(bytes,.1).toFixed(1)+this._options.text.sizeSymbols[i]},_generateExtraButtonSpecs:function(){var self=this;this._extraButtonSpecs={},qq.each(this._options.extraButtons,function(idx,extraButtonOptionEntry){var multiple=extraButtonOptionEntry.multiple,validation=qq.extend({},self._options.validation,!0),extraButtonSpec=qq.extend({},extraButtonOptionEntry);void 0===multiple&&(multiple=self._options.multiple),extraButtonSpec.validation&&qq.extend(validation,extraButtonOptionEntry.validation,!0),qq.extend(extraButtonSpec,{multiple:multiple,validation:validation},!0),self._initExtraButton(extraButtonSpec)})},_getButton:function(buttonId){var extraButtonsSpec=this._extraButtonSpecs[buttonId];return extraButtonsSpec?extraButtonsSpec.element:buttonId===this._defaultButtonId?this._options.button:void 0},_getButtonId:function(buttonOrFileInputOrFile){var inputs,fileInput,fileBlobOrInput=buttonOrFileInputOrFile;if(fileBlobOrInput instanceof qq.BlobProxy&&(fileBlobOrInput=fileBlobOrInput.referenceBlob),fileBlobOrInput&&!qq.isBlob(fileBlobOrInput)){if(qq.isFile(fileBlobOrInput))return fileBlobOrInput.qqButtonId;if("input"===fileBlobOrInput.tagName.toLowerCase()&&"file"===fileBlobOrInput.type.toLowerCase())return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);if(inputs=fileBlobOrInput.getElementsByTagName("input"),qq.each(inputs,function(idx,input){if("file"===input.getAttribute("type"))return fileInput=input,!1}),fileInput)return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME)}},_getCustomResumeData:function(fileId){return this._customResumeDataStore.get(fileId)},_getNotFinished:function(){return this._uploadData.retrieve({status:[qq.status.UPLOADING,qq.status.UPLOAD_RETRYING,qq.status.QUEUED,qq.status.SUBMITTING,qq.status.SUBMITTED,qq.status.PAUSED]}).length},_getValidationBase:function(buttonId){var extraButtonSpec=this._extraButtonSpecs[buttonId];return extraButtonSpec?extraButtonSpec.validation:this._options.validation},_getValidationDescriptor:function(fileWrapper){return fileWrapper.file instanceof qq.BlobProxy?{name:qq.getFilename(fileWrapper.file.referenceBlob),size:fileWrapper.file.referenceBlob.size}:{name:this.getUploads({id:fileWrapper.id}).name,size:this.getUploads({id:fileWrapper.id}).size}},_getValidationDescriptors:function(fileWrappers){var self=this,fileDescriptors=[];return qq.each(fileWrappers,function(idx,fileWrapper){fileDescriptors.push(self._getValidationDescriptor(fileWrapper))}),fileDescriptors},_handleCameraAccess:function(){if(this._options.camera.ios&&qq.ios()){var button=this._options.camera.button,buttonId=button?this._getButtonId(button):this._defaultButtonId,optionRoot=this._options;buttonId&&buttonId!==this._defaultButtonId&&(optionRoot=this._extraButtonSpecs[buttonId]),optionRoot.multiple=!1,null===optionRoot.validation.acceptFiles?optionRoot.validation.acceptFiles="image/*;capture=camera":optionRoot.validation.acceptFiles+=",image/*;capture=camera",qq.each(this._buttons,function(idx,button){if(button.getButtonId()===buttonId)return button.setMultiple(optionRoot.multiple),button.setAcceptFiles(optionRoot.acceptFiles),!1})}},_handleCheckedCallback:function(details){var self=this,callbackRetVal=details.callback();return qq.isGenericPromise(callbackRetVal)?(this.log(details.name+" - waiting for "+details.name+" promise to be fulfilled for "+details.identifier),callbackRetVal.then(function(successParam){self.log(details.name+" promise success for "+details.identifier),details.onSuccess(successParam)},function(){details.onFailure?(self.log(details.name+" promise failure for "+details.identifier),details.onFailure()):self.log(details.name+" promise failure for "+details.identifier)})):(!1!==callbackRetVal?details.onSuccess(callbackRetVal):details.onFailure?(this.log(details.name+" - return value was 'false' for "+details.identifier+".  Invoking failure callback."),details.onFailure()):this.log(details.name+" - return value was 'false' for "+details.identifier+".  Will not proceed."),callbackRetVal)},_handleNewFile:function(file,batchId,newFileWrapperList){var self=this,uuid=qq.getUniqueId(),size=-1,name=qq.getFilename(file),actualFile=file.blob||file,handler=this._customNewFileHandler?this._customNewFileHandler:qq.bind(self._handleNewFileGeneric,self);!qq.isInput(actualFile)&&actualFile.size>=0&&(size=actualFile.size),handler(actualFile,name,uuid,size,newFileWrapperList,batchId,this._options.request.uuidName,{uploadData:self._uploadData,paramsStore:self._paramsStore,addFileToHandler:function(id,file){self._handler.add(id,file),self._netUploadedOrQueued++,self._trackButton(id)}})},_handleNewFileGeneric:function(file,name,uuid,size,fileList,batchId){var id=this._uploadData.addFile({uuid:uuid,name:name,size:size,batchId:batchId,file:file});this._handler.add(id,file),this._trackButton(id),this._netUploadedOrQueued++,fileList.push({id:id,file:file})},_handlePasteSuccess:function(blob,extSuppliedName){var extension=blob.type.split("/")[1],name=extSuppliedName;null==name&&(name=this._options.paste.defaultName),name+="."+extension,this.addFiles({name:name,blob:blob})},_handleDeleteSuccess:function(id){if(this.getUploads({id:id}).status!==qq.status.DELETED){var name=this.getName(id);this._netUploadedOrQueued--,this._netUploaded--,this._handler.expunge(id),this._uploadData.setStatus(id,qq.status.DELETED),this.log("Delete request for '"+name+"' has succeeded.")}},_handleDeleteFailed:function(id,xhrOrXdr){var name=this.getName(id);this._uploadData.setStatus(id,qq.status.DELETE_FAILED),this.log("Delete request for '"+name+"' has failed.","error"),xhrOrXdr&&void 0!==xhrOrXdr.withCredentials?this._options.callbacks.onError(id,name,"Delete request failed with response code "+xhrOrXdr.status,xhrOrXdr):this._options.callbacks.onError(id,name,"Delete request failed",xhrOrXdr)},_initExtraButton:function(spec){var button=this._createUploadButton({accept:spec.validation.acceptFiles,allowedExtensions:spec.validation.allowedExtensions,element:spec.element,folders:spec.folders,multiple:spec.multiple,title:spec.fileInputTitle});this._extraButtonSpecs[button.getButtonId()]=spec},_initFormSupportAndParams:function(){this._formSupport=qq.FormSupport&&new qq.FormSupport(this._options.form,qq.bind(this.uploadStoredFiles,this),qq.bind(this.log,this)),this._formSupport&&this._formSupport.attachedToForm?(this._paramsStore=this._createStore(this._options.request.params,this._formSupport.getFormInputsAsObject),this._options.autoUpload=this._formSupport.newAutoUpload,this._formSupport.newEndpoint&&(this._options.request.endpoint=this._formSupport.newEndpoint)):this._paramsStore=this._createStore(this._options.request.params)},_isDeletePossible:function(){return!(!qq.DeleteFileAjaxRequester||!this._options.deleteFile.enabled)&&(!this._options.cors.expected||(!!qq.supportedFeatures.deleteFileCorsXhr||!(!qq.supportedFeatures.deleteFileCorsXdr||!this._options.cors.allowXdr)))},_isAllowedExtension:function(allowed,fileName){var valid=!1;return!allowed.length||(qq.each(allowed,function(idx,allowedExt){if(qq.isString(allowedExt)){var extRegex=new RegExp("\\."+allowedExt+"$","i");if(null!=fileName.match(extRegex))return valid=!0,!1}}),valid)},_itemError:function(code,maybeNameOrNames,item){var extensionsForMessage,placeholderMatch,message=this._options.messages[code],allowedExtensions=[],names=[].concat(maybeNameOrNames),name=names[0],buttonId=this._getButtonId(item),validationBase=this._getValidationBase(buttonId);function r(name,replacement){message=message.replace(name,replacement)}return qq.each(validationBase.allowedExtensions,function(idx,allowedExtension){qq.isString(allowedExtension)&&allowedExtensions.push(allowedExtension)}),extensionsForMessage=allowedExtensions.join(", ").toLowerCase(),r("{file}",this._options.formatFileName(name)),r("{extensions}",extensionsForMessage),r("{sizeLimit}",this._formatSize(validationBase.sizeLimit)),r("{minSizeLimit}",this._formatSize(validationBase.minSizeLimit)),null!==(placeholderMatch=message.match(/(\{\w+\})/g))&&qq.each(placeholderMatch,function(idx,placeholder){r(placeholder,names[idx])}),this._options.callbacks.onError(null,name,message,void 0),message},_manualRetry:function(id,callback){if(this._onBeforeManualRetry(id))return this._netUploadedOrQueued++,this._uploadData.setStatus(id,qq.status.UPLOAD_RETRYING),callback?callback(id):this._handler.retry(id),!0},_maybeAllComplete:function(id,status){var self=this,notFinished=this._getNotFinished();status===qq.status.UPLOAD_SUCCESSFUL?this._succeededSinceLastAllComplete.push(id):status===qq.status.UPLOAD_FAILED&&this._failedSinceLastAllComplete.push(id),0===notFinished&&(this._succeededSinceLastAllComplete.length||this._failedSinceLastAllComplete.length)&&setTimeout(function(){self._onAllComplete(self._succeededSinceLastAllComplete,self._failedSinceLastAllComplete)},0)},_maybeHandleIos8SafariWorkaround:function(){var self=this;if(this._options.workarounds.ios8SafariUploads&&qq.ios800()&&qq.iosSafari())throw setTimeout(function(){window.alert(self._options.messages.unsupportedBrowserIos8Safari)},0),new qq.Error(this._options.messages.unsupportedBrowserIos8Safari)},_maybeParseAndSendUploadError:function(id,name,response,xhr){if(!response.success)if(xhr&&200!==xhr.status&&!response.error)this._options.callbacks.onError(id,name,"XHR returned response code "+xhr.status,xhr);else{var errorReason=response.error?response.error:this._options.text.defaultResponseError;this._options.callbacks.onError(id,name,errorReason,xhr)}},_maybeProcessNextItemAfterOnValidateCallback:function(validItem,items,index,params,endpoint){var self=this;if(items.length>index)if(validItem||!this._options.validation.stopOnFirstInvalidFile)setTimeout(function(){var validationDescriptor=self._getValidationDescriptor(items[index]),buttonId=self._getButtonId(items[index].file),button=self._getButton(buttonId);self._handleCheckedCallback({name:"onValidate",callback:qq.bind(self._options.callbacks.onValidate,self,validationDescriptor,button),onSuccess:qq.bind(self._onValidateCallbackSuccess,self,items,index,params,endpoint),onFailure:qq.bind(self._onValidateCallbackFailure,self,items,index,params,endpoint),identifier:"Item '"+validationDescriptor.name+"', size: "+validationDescriptor.size})},0);else if(!validItem)for(;index<items.length;index++)self._fileOrBlobRejected(items[index].id)},_onAllComplete:function(successful,failed){this._totalProgress&&this._totalProgress.onAllComplete(successful,failed,this._preventRetries),this._options.callbacks.onAllComplete(qq.extend([],successful),qq.extend([],failed)),this._succeededSinceLastAllComplete=[],this._failedSinceLastAllComplete=[]},_onAutoRetry:function(id,name,responseJSON,xhr,callback){var self=this;if(self._preventRetries[id]=responseJSON[self._options.retry.preventRetryResponseProperty],self._shouldAutoRetry(id)){var retryWaitPeriod=1e3*self._options.retry.autoAttemptDelay;return self._maybeParseAndSendUploadError.apply(self,arguments),self._options.callbacks.onAutoRetry(id,name,self._autoRetries[id]),self._onBeforeAutoRetry(id,name),self._uploadData.setStatus(id,qq.status.UPLOAD_RETRYING),self._retryTimeouts[id]=setTimeout(function(){self.log("Starting retry for "+name+"..."),callback?callback(id):self._handler.retry(id)},retryWaitPeriod),!0}},_onBeforeAutoRetry:function(id,name){this.log("Waiting "+this._options.retry.autoAttemptDelay+" seconds before retrying "+name+"...")},_onBeforeManualRetry:function(id){var fileName,itemLimit=this._currentItemLimit;return this._preventRetries[id]?(this.log("Retries are forbidden for id "+id,"warn"),!1):this._handler.isValid(id)?(fileName=this.getName(id),!1!==this._options.callbacks.onManualRetry(id,fileName)&&(itemLimit>0&&this._netUploadedOrQueued+1>itemLimit?(this._itemError("retryFailTooManyItems"),!1):(this.log("Retrying upload for '"+fileName+"' (id: "+id+")..."),!0))):(this.log("'"+id+"' is not a valid file ID","error"),!1)},_onCancel:function(id,name){this._netUploadedOrQueued--,clearTimeout(this._retryTimeouts[id]);var storedItemIndex=qq.indexOf(this._storedIds,id);!this._options.autoUpload&&storedItemIndex>=0&&this._storedIds.splice(storedItemIndex,1),this._uploadData.setStatus(id,qq.status.CANCELED)},_onComplete:function(id,name,result,xhr){return result.success?(result.thumbnailUrl&&(this._thumbnailUrls[id]=result.thumbnailUrl),this._netUploaded++,this._uploadData.setStatus(id,qq.status.UPLOAD_SUCCESSFUL)):(this._netUploadedOrQueued--,this._uploadData.setStatus(id,qq.status.UPLOAD_FAILED),!0===result[this._options.retry.preventRetryResponseProperty]&&(this._preventRetries[id]=!0)),this._maybeParseAndSendUploadError(id,name,result,xhr),!!result.success},_onDelete:function(id){this._uploadData.setStatus(id,qq.status.DELETING)},_onDeleteComplete:function(id,xhrOrXdr,isError){this.getName(id);isError?this._handleDeleteFailed(id,xhrOrXdr):this._handleDeleteSuccess(id)},_onInputChange:function(input){var fileIndex;if(qq.supportedFeatures.ajaxUploading){for(fileIndex=0;fileIndex<input.files.length;fileIndex++)this._annotateWithButtonId(input.files[fileIndex],input);this.addFiles(input.files)}else input.value.length>0&&this.addFiles(input);qq.each(this._buttons,function(idx,button){button.reset()})},_onProgress:function(id,name,loaded,total){this._totalProgress&&this._totalProgress.onIndividualProgress(id,loaded,total)},_onSubmit:function(id,name){},_onSubmitCallbackSuccess:function(id,name){this._onSubmit.apply(this,arguments),this._uploadData.setStatus(id,qq.status.SUBMITTED),this._onSubmitted.apply(this,arguments),this._options.autoUpload?(this._options.callbacks.onSubmitted.apply(this,arguments),this._uploadFile(id)):(this._storeForLater(id),this._options.callbacks.onSubmitted.apply(this,arguments))},_onSubmitDelete:function(id,onSuccessCallback,additionalMandatedParams){var adjustedOnSuccessCallback,uuid=this.getUuid(id);return onSuccessCallback&&(adjustedOnSuccessCallback=qq.bind(onSuccessCallback,this,id,uuid,additionalMandatedParams)),this._isDeletePossible()?(this._handleCheckedCallback({name:"onSubmitDelete",callback:qq.bind(this._options.callbacks.onSubmitDelete,this,id),onSuccess:adjustedOnSuccessCallback||qq.bind(this._deleteHandler.sendDelete,this,id,uuid,additionalMandatedParams),identifier:id}),!0):(this.log("Delete request ignored for ID "+id+", delete feature is disabled or request not possible due to CORS on a user agent that does not support pre-flighting.","warn"),!1)},_onSubmitted:function(id){},_onTotalProgress:function(loaded,total){this._options.callbacks.onTotalProgress(loaded,total)},_onUploadPrep:function(id){},_onUpload:function(id,name){this._uploadData.setStatus(id,qq.status.UPLOADING)},_onUploadChunk:function(id,chunkData){},_onUploadChunkSuccess:function(id,chunkData){!this._preventRetries[id]&&this._options.retry.enableAuto&&(this._autoRetries[id]=0)},_onUploadStatusChange:function(id,oldStatus,newStatus){newStatus===qq.status.PAUSED&&clearTimeout(this._retryTimeouts[id])},_onValidateBatchCallbackFailure:function(fileWrappers){var self=this;qq.each(fileWrappers,function(idx,fileWrapper){self._fileOrBlobRejected(fileWrapper.id)})},_onValidateBatchCallbackSuccess:function(validationDescriptors,items,params,endpoint,button){var errorMessage,itemLimit=this._currentItemLimit,proposedNetFilesUploadedOrQueued=this._netUploadedOrQueued;0===itemLimit||proposedNetFilesUploadedOrQueued<=itemLimit?items.length>0?this._handleCheckedCallback({name:"onValidate",callback:qq.bind(this._options.callbacks.onValidate,this,validationDescriptors[0],button),onSuccess:qq.bind(this._onValidateCallbackSuccess,this,items,0,params,endpoint),onFailure:qq.bind(this._onValidateCallbackFailure,this,items,0,params,endpoint),identifier:"Item '"+items[0].file.name+"', size: "+items[0].file.size}):this._itemError("noFilesError"):(this._onValidateBatchCallbackFailure(items),errorMessage=this._options.messages.tooManyItemsError.replace(/\{netItems\}/g,proposedNetFilesUploadedOrQueued).replace(/\{itemLimit\}/g,itemLimit),this._batchError(errorMessage))},_onValidateCallbackFailure:function(items,index,params,endpoint){var nextIndex=index+1;this._fileOrBlobRejected(items[index].id,items[index].file.name),this._maybeProcessNextItemAfterOnValidateCallback(!1,items,nextIndex,params,endpoint)},_onValidateCallbackSuccess:function(items,index,params,endpoint){var self=this,nextIndex=index+1,validationDescriptor=this._getValidationDescriptor(items[index]);this._validateFileOrBlobData(items[index],validationDescriptor).then(function(){self._upload(items[index].id,params,endpoint),self._maybeProcessNextItemAfterOnValidateCallback(!0,items,nextIndex,params,endpoint)},function(){self._maybeProcessNextItemAfterOnValidateCallback(!1,items,nextIndex,params,endpoint)})},_prepareItemsForUpload:function(items,params,endpoint){if(0!==items.length){var validationDescriptors=this._getValidationDescriptors(items),buttonId=this._getButtonId(items[0].file),button=this._getButton(buttonId);this._handleCheckedCallback({name:"onValidateBatch",callback:qq.bind(this._options.callbacks.onValidateBatch,this,validationDescriptors,button),onSuccess:qq.bind(this._onValidateBatchCallbackSuccess,this,validationDescriptors,items,params,endpoint,button),onFailure:qq.bind(this._onValidateBatchCallbackFailure,this,items),identifier:"batch validation"})}else this._itemError("noFilesError")},_preventLeaveInProgress:function(){var self=this;this._disposeSupport.attach(window,"beforeunload",function(e){if(self.getInProgress())return(e=e||window.event).returnValue=self._options.messages.onLeave,self._options.messages.onLeave})},_refreshSessionData:function(){var self=this,options=this._options.session;qq.Session&&null!=this._options.session.endpoint&&(this._session||(qq.extend(options,{cors:this._options.cors}),options.log=qq.bind(this.log,this),options.addFileRecord=qq.bind(this._addCannedFile,this),this._session=new qq.Session(options)),setTimeout(function(){self._session.refresh().then(function(response,xhrOrXdr){self._sessionRequestComplete(),self._options.callbacks.onSessionRequestComplete(response,!0,xhrOrXdr)},function(response,xhrOrXdr){self._options.callbacks.onSessionRequestComplete(response,!1,xhrOrXdr)})},0))},_sessionRequestComplete:function(){},_setSize:function(id,newSize){this._uploadData.updateSize(id,newSize),this._totalProgress&&this._totalProgress.onNewSize(id)},_shouldAutoRetry:function(id){var uploadData=this._uploadData.retrieve({id:id});return!!(!this._preventRetries[id]&&this._options.retry.enableAuto&&uploadData.status!==qq.status.PAUSED&&(void 0===this._autoRetries[id]&&(this._autoRetries[id]=0),this._autoRetries[id]<this._options.retry.maxAutoAttempts))&&(this._autoRetries[id]+=1,!0)},_storeForLater:function(id){this._storedIds.push(id)},_trackButton:function(id){var buttonId;(buttonId=qq.supportedFeatures.ajaxUploading?this._handler.getFile(id).qqButtonId:this._getButtonId(this._handler.getInput(id)))&&(this._buttonIdsForFileIds[id]=buttonId)},_updateFormSupportAndParams:function(formElementOrId){this._options.form.element=formElementOrId,this._formSupport=qq.FormSupport&&new qq.FormSupport(this._options.form,qq.bind(this.uploadStoredFiles,this),qq.bind(this.log,this)),this._formSupport&&this._formSupport.attachedToForm&&(this._paramsStore.addReadOnly(null,this._formSupport.getFormInputsAsObject),this._options.autoUpload=this._formSupport.newAutoUpload,this._formSupport.newEndpoint&&this.setEndpoint(this._formSupport.newEndpoint))},_upload:function(id,params,endpoint){var name=this.getName(id);params&&this.setParams(params,id),endpoint&&this.setEndpoint(endpoint,id),this._handleCheckedCallback({name:"onSubmit",callback:qq.bind(this._options.callbacks.onSubmit,this,id,name),onSuccess:qq.bind(this._onSubmitCallbackSuccess,this,id,name),onFailure:qq.bind(this._fileOrBlobRejected,this,id,name),identifier:id})},_uploadFile:function(id){this._handler.upload(id)||this._uploadData.setStatus(id,qq.status.QUEUED)},_uploadStoredFiles:function(){for(var idToUpload,stillSubmitting,self=this;this._storedIds.length;)idToUpload=this._storedIds.shift(),this._uploadFile(idToUpload);(stillSubmitting=this.getUploads({status:qq.status.SUBMITTING}).length)&&(qq.log("Still waiting for "+stillSubmitting+" files to clear submit queue. Will re-parse stored IDs array shortly."),setTimeout(function(){self._uploadStoredFiles()},1e3))},_validateFileOrBlobData:function(fileWrapper,validationDescriptor){var self=this,file=fileWrapper.file instanceof qq.BlobProxy?fileWrapper.file.referenceBlob:fileWrapper.file,name=validationDescriptor.name,size=validationDescriptor.size,buttonId=this._getButtonId(fileWrapper.file),validationBase=this._getValidationBase(buttonId),validityChecker=new qq.Promise;return validityChecker.then(function(){},function(){self._fileOrBlobRejected(fileWrapper.id,name)}),qq.isFileOrInput(file)&&!this._isAllowedExtension(validationBase.allowedExtensions,name)?(this._itemError("typeError",name,file),validityChecker.failure()):this._options.validation.allowEmpty||0!==size?size>0&&validationBase.sizeLimit&&size>validationBase.sizeLimit?(this._itemError("sizeError",name,file),validityChecker.failure()):size>0&&size<validationBase.minSizeLimit?(this._itemError("minSizeError",name,file),validityChecker.failure()):(qq.ImageValidation&&qq.supportedFeatures.imagePreviews&&qq.isFile(file)?new qq.ImageValidation(file,qq.bind(self.log,self)).validate(validationBase.image).then(validityChecker.success,function(errorCode){self._itemError(errorCode+"ImageError",name,file),validityChecker.failure()}):validityChecker.success(),validityChecker):(this._itemError("emptyError",name,file),validityChecker.failure())},_wrapCallbacks:function(){var self,safeCallback,prop;for(prop in self=this,safeCallback=function(name,callback,args){var errorMsg;try{return callback.apply(self,args)}catch(exception){errorMsg=exception.message||exception.toString(),self.log("Caught exception in '"+name+"' callback - "+errorMsg,"error")}},this._options.callbacks)!function(){var callbackName,callbackFunc;callbackName=prop,callbackFunc=self._options.callbacks[callbackName],self._options.callbacks[callbackName]=function(){return safeCallback(callbackName,callbackFunc,arguments)}}()}}}(),function(){"use strict";qq.FineUploaderBasic=function(o){var self=this;this._options={debug:!1,button:null,multiple:!0,maxConnections:3,disableCancelForFormUploads:!1,autoUpload:!0,warnBeforeUnload:!0,request:{customHeaders:{},endpoint:"/server/upload",filenameParam:"qqfilename",forceMultipart:!0,inputName:"qqfile",method:"POST",omitDefaultParams:!1,params:{},paramsInBody:!0,requireSuccessJson:!0,totalFileSizeName:"qqtotalfilesize",uuidName:"qquuid"},validation:{allowedExtensions:[],sizeLimit:0,minSizeLimit:0,itemLimit:0,stopOnFirstInvalidFile:!0,acceptFiles:null,image:{maxHeight:0,maxWidth:0,minHeight:0,minWidth:0},allowEmpty:!1},callbacks:{onSubmit:function(id,name){},onSubmitted:function(id,name){},onComplete:function(id,name,responseJSON,maybeXhr){},onAllComplete:function(successful,failed){},onCancel:function(id,name){},onUpload:function(id,name){},onUploadChunk:function(id,name,chunkData){},onUploadChunkSuccess:function(id,chunkData,responseJSON,xhr){},onResume:function(id,fileName,chunkData,customResumeData){},onProgress:function(id,name,loaded,total){},onTotalProgress:function(loaded,total){},onError:function(id,name,reason,maybeXhrOrXdr){},onAutoRetry:function(id,name,attemptNumber){},onManualRetry:function(id,name){},onValidateBatch:function(fileOrBlobData){},onValidate:function(fileOrBlobData){},onSubmitDelete:function(id){},onDelete:function(id){},onDeleteComplete:function(id,xhrOrXdr,isError){},onPasteReceived:function(blob){},onStatusChange:function(id,oldStatus,newStatus){},onSessionRequestComplete:function(response,success,xhrOrXdr){}},messages:{typeError:"{file} has an invalid extension. Valid extension(s): {extensions}.",sizeError:"{file} is too large, maximum file size is {sizeLimit}.",minSizeError:"{file} is too small, minimum file size is {minSizeLimit}.",emptyError:"{file} is empty, please select files again without it.",noFilesError:"No files to upload.",tooManyItemsError:"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.",maxHeightImageError:"Image is too tall.",maxWidthImageError:"Image is too wide.",minHeightImageError:"Image is not tall enough.",minWidthImageError:"Image is not wide enough.",retryFailTooManyItems:"Retry failed - you have reached your file limit.",onLeave:"The files are being uploaded, if you leave now the upload will be canceled.",unsupportedBrowserIos8Safari:"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues."},retry:{enableAuto:!1,maxAutoAttempts:3,autoAttemptDelay:5,preventRetryResponseProperty:"preventRetry"},classes:{buttonHover:"qq-upload-button-hover",buttonFocus:"qq-upload-button-focus"},chunking:{enabled:!1,concurrent:{enabled:!1},mandatory:!1,paramNames:{partIndex:"qqpartindex",partByteOffset:"qqpartbyteoffset",chunkSize:"qqchunksize",totalFileSize:"qqtotalfilesize",totalParts:"qqtotalparts"},partSize:function(id){return 2e6},success:{endpoint:null,headers:function(id){return null},jsonPayload:!1,method:"POST",params:function(id){return null},resetOnStatus:[]}},resume:{enabled:!1,recordsExpireIn:7,paramNames:{resuming:"qqresume"},customKeys:function(fileId){return[]}},formatFileName:function(fileOrBlobName){return fileOrBlobName},text:{defaultResponseError:"Upload failure reason unknown",fileInputTitle:"file input",sizeSymbols:["kB","MB","GB","TB","PB","EB"]},deleteFile:{enabled:!1,method:"DELETE",endpoint:"/server/upload",customHeaders:{},params:{}},cors:{expected:!1,sendCredentials:!1,allowXdr:!1},blobs:{defaultName:"misc_data"},paste:{targetElement:null,defaultName:"pasted_image"},camera:{ios:!1,button:null},extraButtons:[],session:{endpoint:null,params:{},customHeaders:{},refreshOnReset:!0},form:{element:"qq-form",autoUpload:!1,interceptSubmit:!0},scaling:{customResizer:null,sendOriginal:!0,orient:!0,defaultType:null,defaultQuality:80,failureText:"Failed to scale",includeExif:!1,sizes:[]},workarounds:{iosEmptyVideos:!0,ios8SafariUploads:!0,ios8BrowserCrash:!1}},qq.extend(this._options,o,!0),this._buttons=[],this._extraButtonSpecs={},this._buttonIdsForFileIds=[],this._wrapCallbacks(),this._disposeSupport=new qq.DisposeSupport,this._storedIds=[],this._autoRetries=[],this._retryTimeouts=[],this._preventRetries=[],this._thumbnailUrls=[],this._netUploadedOrQueued=0,this._netUploaded=0,this._uploadData=this._createUploadDataTracker(),this._initFormSupportAndParams(),this._customHeadersStore=this._createStore(this._options.request.customHeaders),this._deleteFileCustomHeadersStore=this._createStore(this._options.deleteFile.customHeaders),this._deleteFileParamsStore=this._createStore(this._options.deleteFile.params),this._endpointStore=this._createStore(this._options.request.endpoint),this._deleteFileEndpointStore=this._createStore(this._options.deleteFile.endpoint),this._handler=this._createUploadHandler(),this._deleteHandler=qq.DeleteFileAjaxRequester&&this._createDeleteHandler(),this._options.button&&(this._defaultButtonId=this._createUploadButton({element:this._options.button,title:this._options.text.fileInputTitle}).getButtonId()),this._generateExtraButtonSpecs(),this._handleCameraAccess(),this._options.paste.targetElement&&(qq.PasteSupport?this._pasteHandler=this._createPasteHandler():this.log("Paste support module not found","error")),this._options.warnBeforeUnload&&this._preventLeaveInProgress(),this._imageGenerator=qq.ImageGenerator&&new qq.ImageGenerator(qq.bind(this.log,this)),this._refreshSessionData(),this._succeededSinceLastAllComplete=[],this._failedSinceLastAllComplete=[],this._scaler=qq.Scaler&&new qq.Scaler(this._options.scaling,qq.bind(this.log,this))||{},this._scaler.enabled&&(this._customNewFileHandler=qq.bind(this._scaler.handleNewFile,this._scaler)),qq.TotalProgress&&qq.supportedFeatures.progressBar&&(this._totalProgress=new qq.TotalProgress(qq.bind(this._onTotalProgress,this),function(id){var entry=self._uploadData.retrieve({id:id});return entry&&entry.size||0})),this._currentItemLimit=this._options.validation.itemLimit,this._customResumeDataStore=this._createStore()},qq.FineUploaderBasic.prototype=qq.basePublicApi,qq.extend(qq.FineUploaderBasic.prototype,qq.basePrivateApi)}(),qq.AjaxRequester=function(o){"use strict";var log,shouldParamsBeInQueryString,queue=[],requestData={},options={acceptHeader:null,validMethods:["PATCH","POST","PUT"],method:"POST",contentType:"application/x-www-form-urlencoded",maxConnections:3,customHeaders:{},endpointStore:{},paramsStore:{},mandatedParams:{},allowXRequestedWithAndCacheControl:!0,successfulResponseCodes:{DELETE:[200,202,204],PATCH:[200,201,202,203,204],POST:[200,201,202,203,204],PUT:[200,201,202,203,204],GET:[200]},cors:{expected:!1,sendCredentials:!1},log:function(str,level){},onSend:function(id){},onComplete:function(id,xhrOrXdr,isError){},onProgress:null};if(qq.extend(options,o),log=options.log,qq.indexOf(options.validMethods,options.method)<0)throw new Error("'"+options.method+"' is not a supported method for this type of request!");function isXdr(xhr){return options.cors.expected&&void 0===xhr.withCredentials}function getXhrOrXdr(id,suppliedXhr){var xhrOrXdr=requestData[id]&&requestData[id].xhr;return xhrOrXdr||(xhrOrXdr=suppliedXhr||(options.cors.expected?function getCorsAjaxTransport(){var xhrOrXdr;return(window.XMLHttpRequest||window.ActiveXObject)&&void 0===(xhrOrXdr=qq.createXhrInstance()).withCredentials&&((xhrOrXdr=new XDomainRequest).onload=function(){},xhrOrXdr.onerror=function(){},xhrOrXdr.ontimeout=function(){},xhrOrXdr.onprogress=function(){}),xhrOrXdr}():qq.createXhrInstance()),requestData[id].xhr=xhrOrXdr),xhrOrXdr}function dequeue(id){var i=qq.indexOf(queue,id),max=options.maxConnections;delete requestData[id],queue.splice(i,1),queue.length>=max&&i<max&&sendRequest(queue[max-1])}function onComplete(id,xdrError){var xhr=getXhrOrXdr(id),method=options.method,isError=!0===xdrError;dequeue(id),isError?log(method+" request for "+id+" has failed","error"):isXdr(xhr)||function isResponseSuccessful(responseCode){return qq.indexOf(options.successfulResponseCodes[options.method],responseCode)>=0}(xhr.status)||(isError=!0,log(method+" request for "+id+" has failed - response code "+xhr.status,"error")),options.onComplete(id,xhr,isError)}function sendRequest(id,optXhr){var url,xhr=getXhrOrXdr(id,optXhr),method=options.method,params=function getParams(id){var params,onDemandParams=requestData[id].additionalParams,mandatedParams=options.mandatedParams;return options.paramsStore.get&&(params=options.paramsStore.get(id)),onDemandParams&&qq.each(onDemandParams,function(name,val){(params=params||{})[name]=val}),mandatedParams&&qq.each(mandatedParams,function(name,val){(params=params||{})[name]=val}),params}(id),payload=requestData[id].payload;return options.onSend(id),url=function createUrl(id,params,additionalQueryParams){var endpoint=options.endpointStore.get(id),addToPath=requestData[id].addToPath;void 0!=addToPath&&(endpoint+="/"+addToPath);shouldParamsBeInQueryString&&params&&(endpoint=qq.obj2url(params,endpoint));additionalQueryParams&&(endpoint=qq.obj2url(additionalQueryParams,endpoint));return endpoint}(id,params,requestData[id].additionalQueryParams),isXdr(xhr)?(xhr.onload=function getXdrLoadHandler(id){return function(){onComplete(id)}}(id),xhr.onerror=function getXdrErrorHandler(id){return function(){onComplete(id,!0)}}(id)):xhr.onreadystatechange=function getXhrReadyStateChangeHandler(id){return function(){4===getXhrOrXdr(id).readyState&&onComplete(id)}}(id),function registerForUploadProgress(id){var onProgress=options.onProgress;onProgress&&(getXhrOrXdr(id).upload.onprogress=function(e){e.lengthComputable&&onProgress(id,e.loaded,e.total)})}(id),xhr.open(method,url,!0),options.cors.expected&&options.cors.sendCredentials&&!isXdr(xhr)&&(xhr.withCredentials=!0),function setHeaders(id){var xhr=getXhrOrXdr(id),customHeaders=options.customHeaders,onDemandHeaders=requestData[id].additionalHeaders||{},method=options.method,allHeaders={};isXdr(xhr)||(options.acceptHeader&&xhr.setRequestHeader("Accept",options.acceptHeader),options.allowXRequestedWithAndCacheControl&&(options.cors.expected&&function isSimpleMethod(){return qq.indexOf(["GET","POST","HEAD"],options.method)>=0}()&&!function containsNonSimpleHeaders(headers){var containsNonSimple=!1;return qq.each(containsNonSimple,function(idx,header){if(qq.indexOf(["Accept","Accept-Language","Content-Language","Content-Type"],header)<0)return containsNonSimple=!0,!1}),containsNonSimple}()||(xhr.setRequestHeader("X-Requested-With","XMLHttpRequest"),xhr.setRequestHeader("Cache-Control","no-cache"))),!options.contentType||"POST"!==method&&"PUT"!==method||xhr.setRequestHeader("Content-Type",options.contentType),qq.extend(allHeaders,qq.isFunction(customHeaders)?customHeaders(id):customHeaders),qq.extend(allHeaders,onDemandHeaders),qq.each(allHeaders,function(name,val){xhr.setRequestHeader(name,val)}))}(id),log("Sending "+method+" request for "+id),payload?xhr.send(payload):shouldParamsBeInQueryString||!params?xhr.send():params&&options.contentType&&options.contentType.toLowerCase().indexOf("application/x-www-form-urlencoded")>=0?xhr.send(qq.obj2url(params,"")):params&&options.contentType&&options.contentType.toLowerCase().indexOf("application/json")>=0?xhr.send(JSON.stringify(params)):xhr.send(params),xhr}shouldParamsBeInQueryString="GET"===options.method||"DELETE"===options.method,qq.extend(this,{initTransport:function(id){var path,params,headers,payload,cacheBuster,additionalQueryParams;return{withPath:function(appendToPath){return path=appendToPath,this},withParams:function(additionalParams){return params=additionalParams,this},withQueryParams:function(_additionalQueryParams_){return additionalQueryParams=_additionalQueryParams_,this},withHeaders:function(additionalHeaders){return headers=additionalHeaders,this},withPayload:function(thePayload){return payload=thePayload,this},withCacheBuster:function(){return cacheBuster=!0,this},send:function(optXhr){return cacheBuster&&qq.indexOf(["GET","DELETE"],options.method)>=0&&(params.qqtimestamp=(new Date).getTime()),function prepareToSend(id,optXhr,addToPath,additionalParams,additionalQueryParams,additionalHeaders,payload){if(requestData[id]={addToPath:addToPath,additionalParams:additionalParams,additionalQueryParams:additionalQueryParams,additionalHeaders:additionalHeaders,payload:payload},queue.push(id)<=options.maxConnections)return sendRequest(id,optXhr)}(id,optXhr,path,params,additionalQueryParams,headers,payload)}}},canceled:function(id){dequeue(id)}})},qq.UploadHandler=function(spec){"use strict";var proxy=spec.proxy,fileState={},onCancel=proxy.onCancel,getName=proxy.getName;qq.extend(this,{add:function(id,fileItem){fileState[id]=fileItem,fileState[id].temp={}},cancel:function(id){var self=this,cancelFinalizationEffort=new qq.Promise;onCancel(id,getName(id),cancelFinalizationEffort).then(function(){self.isValid(id)&&(fileState[id].canceled=!0,self.expunge(id)),cancelFinalizationEffort.success()})},expunge:function(id){delete fileState[id]},getThirdPartyFileId:function(id){return fileState[id].key},isValid:function(id){return void 0!==fileState[id]},reset:function(){fileState={}},_getFileState:function(id){return fileState[id]},_setThirdPartyFileId:function(id,thirdPartyFileId){fileState[id].key=thirdPartyFileId},_wasCanceled:function(id){return!!fileState[id].canceled}})},qq.UploadHandlerController=function(o,namespace){"use strict";var preventRetryResponse,log,handler,response,controller=this,chunkingPossible=!1,concurrentChunkingPossible=!1,options={paramsStore:{},maxConnections:3,chunking:{enabled:!1,multiple:{enabled:!1}},log:function(str,level){},onProgress:function(id,fileName,loaded,total){},onComplete:function(id,fileName,response,xhr){},onCancel:function(id,fileName){},onUploadPrep:function(id){},onUpload:function(id,fileName){},onUploadChunk:function(id,fileName,chunkData){},onUploadChunkSuccess:function(id,chunkData,response,xhr){},onAutoRetry:function(id,fileName,response,xhr){},onResume:function(id,fileName,chunkData,customResumeData){},onUuidChanged:function(id,newUuid){},getName:function(id){},setSize:function(id,newSize){},isQueued:function(id){},getIdsInProxyGroup:function(id){},getIdsInBatch:function(id){},isInProgress:function(id){}},chunked={done:function(id,chunkIdx,response,xhr){var chunkData=handler._getChunkData(id,chunkIdx);handler._getFileState(id).attemptingResume=!1,delete handler._getFileState(id).temp.chunkProgress[chunkIdx],handler._getFileState(id).loaded+=chunkData.size,options.onUploadChunkSuccess(id,handler._getChunkDataForCallback(chunkData),response,xhr)},finalize:function(id){var size=options.getSize(id),name=options.getName(id);log("All chunks have been uploaded for "+id+" - finalizing...."),handler.finalizeChunks(id).then(function(response,xhr){log("Finalize successful for "+id);var normaizedResponse=upload.normalizeResponse(response,!0);options.onProgress(id,name,size,size),handler._maybeDeletePersistedChunkData(id),upload.cleanup(id,normaizedResponse,xhr)},function(response,xhr){var normalizedResponse=upload.normalizeResponse(response,!1);log("Problem finalizing chunks for file ID "+id+" - "+normalizedResponse.error,"error"),(normalizedResponse.reset||xhr&&options.chunking.success.resetOnStatus.indexOf(xhr.status)>=0)&&chunked.reset(id),options.onAutoRetry(id,name,normalizedResponse,xhr)||upload.cleanup(id,normalizedResponse,xhr)})},handleFailure:function(chunkIdx,id,response,xhr){var name=options.getName(id);log("Chunked upload request failed for "+id+", chunk "+chunkIdx),handler.clearCachedChunk(id,chunkIdx);var inProgressIdx,responseToReport=upload.normalizeResponse(response,!1);if(responseToReport.reset)chunked.reset(id);else{var inProgressChunksArray=handler._getFileState(id).chunking.inProgress;(inProgressIdx=inProgressChunksArray?qq.indexOf(inProgressChunksArray,chunkIdx):-1)>=0&&(handler._getFileState(id).chunking.inProgress.splice(inProgressIdx,1),handler._getFileState(id).chunking.remaining.unshift(chunkIdx))}handler._getFileState(id).temp.ignoreFailure||(concurrentChunkingPossible&&(handler._getFileState(id).temp.ignoreFailure=!0,log(qq.format("Going to attempt to abort these chunks: {}. These are currently in-progress: {}.",JSON.stringify(Object.keys(handler._getXhrs(id))),JSON.stringify(handler._getFileState(id).chunking.inProgress))),qq.each(handler._getXhrs(id),function(ckid,ckXhr){log(qq.format("Attempting to abort file {}.{}. XHR readyState {}. ",id,ckid,ckXhr.readyState)),ckXhr.abort(),ckXhr._cancelled=!0}),handler.moveInProgressToRemaining(id),connectionManager.free(id,!0)),options.onAutoRetry(id,name,responseToReport,xhr)||upload.cleanup(id,responseToReport,xhr))},hasMoreParts:function(id){return!!handler._getFileState(id).chunking.remaining.length},nextPart:function(id){var nextIdx=handler._getFileState(id).chunking.remaining.shift();return nextIdx>=handler._getTotalChunks(id)&&(nextIdx=null),nextIdx},reset:function(id){log("Server or callback has ordered chunking effort to be restarted on next attempt for item ID "+id,"error"),handler._maybeDeletePersistedChunkData(id),handler.reevaluateChunking(id),handler._getFileState(id).loaded=0,handler._getFileState(id).attemptingResume=!1},sendNext:function(id){var size=options.getSize(id),name=options.getName(id),chunkIdx=chunked.nextPart(id),chunkData=handler._getChunkData(id,chunkIdx),fileState=handler._getFileState(id),resuming=fileState.attemptingResume,inProgressChunks=fileState.chunking.inProgress||[];(null==fileState.loaded&&(fileState.loaded=0),resuming&&!1===options.onResume(id,name,chunkData,fileState.customResumeData)&&(chunked.reset(id),chunkIdx=chunked.nextPart(id),chunkData=handler._getChunkData(id,chunkIdx),resuming=!1),null==chunkIdx&&0===inProgressChunks.length)?chunked.finalize(id):(inProgressChunks.push(chunkIdx),handler._getFileState(id).chunking.inProgress=inProgressChunks,concurrentChunkingPossible&&connectionManager.open(id,chunkIdx),concurrentChunkingPossible&&connectionManager.available()&&handler._getFileState(id).chunking.remaining.length&&chunked.sendNext(id),0===chunkData.blob.size&&(log(qq.format("Chunk {} for file {} will not be uploaded, zero sized chunk.",chunkIdx,id),"error"),chunked.handleFailure(chunkIdx,id,"File is no longer available",null)),options.onUploadChunk(id,name,handler._getChunkDataForCallback(chunkData)).then(function(requestOverrides){if(options.isInProgress(id)){log(qq.format("Sending chunked upload request for item {}.{}, bytes {}-{} of {}.",id,chunkIdx,chunkData.start+1,chunkData.end,size));var uploadChunkData={chunkIdx:chunkIdx,id:id,overrides:requestOverrides,resuming:resuming};handler.uploadChunk(uploadChunkData).then(function success(response,xhr){log("Chunked upload request succeeded for "+id+", chunk "+chunkIdx),handler.clearCachedChunk(id,chunkIdx);var inProgressChunks=handler._getFileState(id).chunking.inProgress||[],responseToReport=upload.normalizeResponse(response,!0),inProgressChunkIdx=qq.indexOf(inProgressChunks,chunkIdx);log(qq.format("Chunk {} for file {} uploaded successfully.",chunkIdx,id)),chunked.done(id,chunkIdx,responseToReport,xhr),inProgressChunkIdx>=0&&inProgressChunks.splice(inProgressChunkIdx,1),handler._maybePersistChunkedState(id),chunked.hasMoreParts(id)||0!==inProgressChunks.length?chunked.hasMoreParts(id)?chunked.sendNext(id):log(qq.format("File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}",id,JSON.stringify(inProgressChunks))):chunked.finalize(id)},function failure(response,xhr){chunked.handleFailure(chunkIdx,id,response,xhr)}).done(function(){handler.clearXhr(id,chunkIdx)})}else log(qq.format("Not sending chunked upload request for item {}.{} - no longer in progress.",id,chunkIdx))},function(error){chunked.handleFailure(chunkIdx,id,error,null)}))}},connectionManager={_open:[],_openChunks:{},_waiting:[],available:function(){var max=options.maxConnections,openChunkEntriesCount=0,openChunksCount=0;return qq.each(connectionManager._openChunks,function(fileId,openChunkIndexes){openChunkEntriesCount++,openChunksCount+=openChunkIndexes.length}),max-(connectionManager._open.length-openChunkEntriesCount+openChunksCount)},free:function(id,dontAllowNext){var nextId,allowNext=!dontAllowNext,waitingIndex=qq.indexOf(connectionManager._waiting,id),connectionsIndex=qq.indexOf(connectionManager._open,id);delete connectionManager._openChunks[id],upload.getProxyOrBlob(id)instanceof qq.BlobProxy&&(log("Generated blob upload has ended for "+id+", disposing generated blob."),delete handler._getFileState(id).file),waitingIndex>=0?connectionManager._waiting.splice(waitingIndex,1):allowNext&&connectionsIndex>=0&&(connectionManager._open.splice(connectionsIndex,1),(nextId=connectionManager._waiting.shift())>=0&&(connectionManager._open.push(nextId),upload.start(nextId)))},getWaitingOrConnected:function(){var waitingOrConnected=[];return qq.each(connectionManager._openChunks,function(fileId,chunks){chunks&&chunks.length&&waitingOrConnected.push(parseInt(fileId))}),qq.each(connectionManager._open,function(idx,fileId){connectionManager._openChunks[fileId]||waitingOrConnected.push(parseInt(fileId))}),waitingOrConnected=waitingOrConnected.concat(connectionManager._waiting)},isUsingConnection:function(id){return qq.indexOf(connectionManager._open,id)>=0},open:function(id,chunkIdx){return null==chunkIdx&&connectionManager._waiting.push(id),!!connectionManager.available()&&(null==chunkIdx?(connectionManager._waiting.pop(),connectionManager._open.push(id)):((openChunksEntry=connectionManager._openChunks[id]||[]).push(chunkIdx),connectionManager._openChunks[id]=openChunksEntry),!0);var openChunksEntry},reset:function(){connectionManager._waiting=[],connectionManager._open=[]}},simple_send=function(id,name){var fileState=handler._getFileState(id);fileState?(fileState.loaded=0,log("Sending simple upload request for "+id),handler.uploadFile(id).then(function(response,optXhr){log("Simple upload request succeeded for "+id);var responseToReport=upload.normalizeResponse(response,!0),size=options.getSize(id);options.onProgress(id,name,size,size),upload.maybeNewUuid(id,responseToReport),upload.cleanup(id,responseToReport,optXhr)},function(response,optXhr){log("Simple upload request failed for "+id);var responseToReport=upload.normalizeResponse(response,!1);options.onAutoRetry(id,name,responseToReport,optXhr)||upload.cleanup(id,responseToReport,optXhr)})):log("Ignoring send request as this upload may have been cancelled, File ID "+id,"warn")},upload={cancel:function(id){log("Cancelling "+id),options.paramsStore.remove(id),connectionManager.free(id)},cleanup:function(id,response,optXhr){var name=options.getName(id);options.onComplete(id,name,response,optXhr),handler._getFileState(id)&&handler._clearXhrs&&handler._clearXhrs(id),connectionManager.free(id)},getProxyOrBlob:function(id){return handler.getProxy&&handler.getProxy(id)||handler.getFile&&handler.getFile(id)},initHandler:function(){var handlerType=namespace?qq[namespace]:qq.traditional,handlerModuleSubtype=qq.supportedFeatures.ajaxUploading?"Xhr":"Form";(handler=new handlerType[handlerModuleSubtype+"UploadHandler"](options,{getCustomResumeData:options.getCustomResumeData,getDataByUuid:options.getDataByUuid,getName:options.getName,getSize:options.getSize,getUuid:options.getUuid,log:log,onCancel:options.onCancel,onProgress:options.onProgress,onUuidChanged:options.onUuidChanged,onFinalizing:function(id){options.setStatus(id,qq.status.UPLOAD_FINALIZING)}}))._removeExpiredChunkingRecords&&handler._removeExpiredChunkingRecords()},isDeferredEligibleForUpload:function(id){return options.isQueued(id)},maybeDefer:function(id,blob){return blob&&!handler.getFile(id)&&blob instanceof qq.BlobProxy?(options.onUploadPrep(id),log("Attempting to generate a blob on-demand for "+id),blob.create().then(function(generatedBlob){log("Generated an on-demand blob for "+id),handler.updateBlob(id,generatedBlob),options.setSize(id,generatedBlob.size),handler.reevaluateChunking(id),upload.maybeSendDeferredFiles(id)},function(errorMessage){var errorResponse={};errorMessage&&(errorResponse.error=errorMessage),log(qq.format("Failed to generate blob for ID {}.  Error message: {}.",id,errorMessage),"error"),options.onComplete(id,options.getName(id),qq.extend(errorResponse,preventRetryResponse),null),upload.maybeSendDeferredFiles(id),connectionManager.free(id)}),!1):upload.maybeSendDeferredFiles(id)},maybeSendDeferredFiles:function(id){var idsInGroup=options.getIdsInProxyGroup(id),uploadedThisId=!1;return idsInGroup&&idsInGroup.length?(log("Maybe ready to upload proxy group file "+id),qq.each(idsInGroup,function(idx,idInGroup){if(upload.isDeferredEligibleForUpload(idInGroup)&&handler.getFile(idInGroup))uploadedThisId=idInGroup===id,upload.now(idInGroup);else if(upload.isDeferredEligibleForUpload(idInGroup))return!1})):(uploadedThisId=!0,upload.now(id)),uploadedThisId},maybeNewUuid:function(id,response){void 0!==response.newUuid&&options.onUuidChanged(id,response.newUuid)},normalizeResponse:function(originalResponse,successful){var response=originalResponse;return qq.isObject(originalResponse)||(response={},qq.isString(originalResponse)&&!successful&&(response.error=originalResponse)),response.success=successful,response},now:function(id){var name=options.getName(id);if(!controller.isValid(id))throw new qq.Error(id+" is not a valid file ID to upload!");options.onUpload(id,name).then(function(response){response&&response.pause?(options.setStatus(id,qq.status.PAUSED),handler.pause(id),connectionManager.free(id)):chunkingPossible&&handler._shouldChunkThisFile(id)?chunked.sendNext(id):simple_send(id,name)},function(error){if(log(id+" upload start aborted due to rejected onUpload Promise - details: "+(error=error||{}),"error"),!options.onAutoRetry(id,name,error.responseJSON||{})){var response=upload.normalizeResponse(error.responseJSON,!1);upload.cleanup(id,response)}})},start:function(id){var blobToUpload=upload.getProxyOrBlob(id);return blobToUpload?upload.maybeDefer(id,blobToUpload):(upload.now(id),!0)}};qq.extend(this,{add:function(id,file){handler.add.apply(this,arguments)},upload:function(id){return!!connectionManager.open(id)&&upload.start(id)},retry:function(id){return concurrentChunkingPossible&&(handler._getFileState(id).temp.ignoreFailure=!1),connectionManager.isUsingConnection(id)?upload.start(id):controller.upload(id)},cancel:function(id){var cancelRetVal=handler.cancel(id);qq.isGenericPromise(cancelRetVal)?cancelRetVal.then(function(){upload.cancel(id)}):!1!==cancelRetVal&&upload.cancel(id)},cancelAll:function(){var i,waitingOrConnected=connectionManager.getWaitingOrConnected();if(waitingOrConnected.length)for(i=waitingOrConnected.length-1;i>=0;i--)controller.cancel(waitingOrConnected[i]);connectionManager.reset()},getFile:function(id){return handler.getProxy&&handler.getProxy(id)?handler.getProxy(id).referenceBlob:handler.getFile&&handler.getFile(id)},isProxied:function(id){return!(!handler.getProxy||!handler.getProxy(id))},getInput:function(id){if(handler.getInput)return handler.getInput(id)},reset:function(){log("Resetting upload handler"),controller.cancelAll(),connectionManager.reset(),handler.reset()},expunge:function(id){if(controller.isValid(id))return handler.expunge(id)},isValid:function(id){return handler.isValid(id)},hasResumeRecord:function(id){var key=handler.isValid(id)&&handler._getLocalStorageId&&handler._getLocalStorageId(id);return!!key&&!!localStorage.getItem(key)},getResumableFilesData:function(){return handler.getResumableFilesData?handler.getResumableFilesData():[]},getThirdPartyFileId:function(id){if(controller.isValid(id))return handler.getThirdPartyFileId(id)},pause:function(id){return!!(controller.isResumable(id)&&handler.pause&&controller.isValid(id)&&handler.pause(id))&&(connectionManager.free(id),handler.moveInProgressToRemaining(id),!0)},isAttemptingResume:function(id){return!!handler.isAttemptingResume&&handler.isAttemptingResume(id)},isResumable:function(id){return!!handler.isResumable&&handler.isResumable(id)}}),qq.extend(options,o),log=options.log,chunkingPossible=options.chunking.enabled&&qq.supportedFeatures.chunking,concurrentChunkingPossible=chunkingPossible&&options.chunking.concurrent.enabled,(response={})[options.preventRetryParam]=!0,preventRetryResponse=response,upload.initHandler()},qq.WindowReceiveMessage=function(o){"use strict";var callbackWrapperDetachers={};qq.extend({log:function(message,level){}},o),qq.extend(this,{receiveMessage:function(id,callback){window.postMessage?callbackWrapperDetachers[id]=qq(window).attach("message",function(event){callback(event.data)}):log("iframe message passing not supported in this browser!","error")},stopReceivingMessages:function(id){if(window.postMessage){var detacher=callbackWrapperDetachers[id];detacher&&detacher()}}})},qq.FormUploadHandler=function(spec){"use strict";var options=spec.options,handler=this,proxy=spec.proxy,formHandlerInstanceId=qq.getUniqueId(),onloadCallbacks={},detachLoadEvents={},postMessageCallbackTimers={},isCors=options.isCors,inputName=options.inputName,getUuid=proxy.getUuid,log=proxy.log,corsMessageReceiver=new qq.WindowReceiveMessage({log:log});function getFileIdForIframeName(iframeName){return iframeName.split("_")[0]}qq.extend(this,new qq.UploadHandler(spec)),qq.override(this,function(super_){return{add:function(id,fileInput){super_.add(id,{input:fileInput}),fileInput.setAttribute("name",inputName),fileInput.parentNode&&qq(fileInput).remove()},expunge:function(id){!function expungeFile(id){delete detachLoadEvents[id],isCors&&(clearTimeout(postMessageCallbackTimers[id]),delete postMessageCallbackTimers[id],corsMessageReceiver.stopReceivingMessages(id));var iframe=document.getElementById(handler._getIframeName(id));iframe&&(iframe.setAttribute("src","javascript:false;"),qq(iframe).remove())}(id),super_.expunge(id)},isValid:function(id){return super_.isValid(id)&&void 0!==handler._getFileState(id).input}}}),qq.extend(this,{getInput:function(id){return handler._getFileState(id).input},_attachLoadEvent:function(iframe,callback){var responseDescriptor;isCors?function registerPostMessageCallback(iframe,callback){var iframeName=iframe.id,fileId=getFileIdForIframeName(iframeName),uuid=getUuid(fileId);onloadCallbacks[uuid]=callback,detachLoadEvents[fileId]=qq(iframe).attach("load",function(){handler.getInput(fileId)&&(log("Received iframe load event for CORS upload request (iframe name "+iframeName+")"),postMessageCallbackTimers[iframeName]=setTimeout(function(){var errorMessage="No valid message received from loaded iframe for iframe name "+iframeName;log(errorMessage,"error"),callback({error:errorMessage})},1e3))}),corsMessageReceiver.receiveMessage(iframeName,function(message){log("Received the following window message: '"+message+"'"),getFileIdForIframeName(iframeName);var onloadCallback,response=handler._parseJsonResponse(message),uuid=response.uuid;uuid&&onloadCallbacks[uuid]?(log("Handling response for iframe name "+iframeName),clearTimeout(postMessageCallbackTimers[iframeName]),delete postMessageCallbackTimers[iframeName],handler._detachLoadEvent(iframeName),onloadCallback=onloadCallbacks[uuid],delete onloadCallbacks[uuid],corsMessageReceiver.stopReceivingMessages(iframeName),onloadCallback(response)):uuid||log("'"+message+"' does not contain a UUID - ignoring.")})}(iframe,callback):detachLoadEvents[iframe.id]=qq(iframe).attach("load",function(){if(log("Received response for "+iframe.id),iframe.parentNode){try{if(iframe.contentDocument&&iframe.contentDocument.body&&"false"==iframe.contentDocument.body.innerHTML)return}catch(error){log("Error when attempting to access iframe during handling of upload response ("+error.message+")","error"),responseDescriptor={success:!1}}callback(responseDescriptor)}})},_createIframe:function(id){return function initIframeForUpload(name){var iframe=qq.toElement("<iframe src='javascript:false;' name='"+name+"' />");return iframe.setAttribute("id",name),iframe.style.display="none",document.body.appendChild(iframe),iframe}(handler._getIframeName(id))},_detachLoadEvent:function(id){void 0!==detachLoadEvents[id]&&(detachLoadEvents[id](),delete detachLoadEvents[id])},_getIframeName:function(fileId){return fileId+"_"+formHandlerInstanceId},_initFormForUpload:function(spec){var method=spec.method,endpoint=spec.endpoint,params=spec.params,paramsInBody=spec.paramsInBody,targetName=spec.targetName,form=qq.toElement("<form method='"+method+"' enctype='multipart/form-data'></form>"),url=endpoint;return paramsInBody?qq.obj2Inputs(params,form):url=qq.obj2url(params,endpoint),form.setAttribute("action",url),form.setAttribute("target",targetName),form.style.display="none",document.body.appendChild(form),form},_parseJsonResponse:function(innerHtmlOrMessage){var response={};try{response=qq.parseJson(innerHtmlOrMessage)}catch(error){log("Error when attempting to parse iframe upload response ("+error.message+")","error")}return response}})},qq.XhrUploadHandler=function(spec){"use strict";var handler=this,namespace=spec.options.namespace,proxy=spec.proxy,chunking=spec.options.chunking,getChunkSize=function(id){var fileState=handler._getFileState(id);if(fileState.chunkSize)return fileState.chunkSize;var chunkSize=chunking.partSize;return qq.isFunction(chunkSize)&&(chunkSize=chunkSize(id,getSize(id))),fileState.chunkSize=chunkSize,chunkSize},resume=spec.options.resume,chunkFiles=chunking&&spec.options.chunking.enabled&&qq.supportedFeatures.chunking,resumeEnabled=resume&&spec.options.resume.enabled&&chunkFiles&&qq.supportedFeatures.resume,getName=proxy.getName,getSize=proxy.getSize,getUuid=proxy.getUuid,getEndpoint=proxy.getEndpoint,getDataByUuid=proxy.getDataByUuid,onUuidChanged=proxy.onUuidChanged,onProgress=proxy.onProgress,log=proxy.log,getCustomResumeData=proxy.getCustomResumeData;function abort(id){qq.each(handler._getXhrs(id),function(xhrId,xhr){var ajaxRequester=handler._getAjaxRequester(id,xhrId);xhr.onreadystatechange=null,xhr.upload.onprogress=null,xhr.abort(),ajaxRequester&&ajaxRequester.canceled&&ajaxRequester.canceled(id)})}qq.extend(this,new qq.UploadHandler(spec)),qq.override(this,function(super_){return{add:function(id,blobOrProxy){if(qq.isFile(blobOrProxy)||qq.isBlob(blobOrProxy))super_.add(id,{file:blobOrProxy});else{if(!(blobOrProxy instanceof qq.BlobProxy))throw new Error("Passed obj is not a File, Blob, or proxy");super_.add(id,{proxy:blobOrProxy})}handler._initTempState(id),resumeEnabled&&handler._maybePrepareForResume(id)},expunge:function(id){abort(id),handler._maybeDeletePersistedChunkData(id),handler._clearXhrs(id),super_.expunge(id)}}}),qq.extend(this,{clearCachedChunk:function(id,chunkIdx){var fileState=handler._getFileState(id);fileState&&delete fileState.temp.cachedChunks[chunkIdx]},clearXhr:function(id,chunkIdx){var tempState=handler._getFileState(id).temp;tempState.xhrs&&delete tempState.xhrs[chunkIdx],tempState.ajaxRequesters&&delete tempState.ajaxRequesters[chunkIdx]},finalizeChunks:function(id,responseParser){var lastChunkIdx=handler._getTotalChunks(id)-1,xhr=handler._getXhr(id,lastChunkIdx);return responseParser?(new qq.Promise).success(responseParser(xhr),xhr):(new qq.Promise).success({},xhr)},getFile:function(id){return handler.isValid(id)&&handler._getFileState(id).file},getProxy:function(id){return handler.isValid(id)&&handler._getFileState(id).proxy},getResumableFilesData:function(){var resumableFilesData=[];return handler._iterateResumeRecords(function(key,uploadData){handler.moveInProgressToRemaining(null,uploadData.chunking.inProgress,uploadData.chunking.remaining);var data={name:uploadData.name,remaining:uploadData.chunking.remaining,size:uploadData.size,uuid:uploadData.uuid};uploadData.key&&(data.key=uploadData.key),uploadData.customResumeData&&(data.customResumeData=uploadData.customResumeData),resumableFilesData.push(data)}),resumableFilesData},isAttemptingResume:function(id){return handler._getFileState(id).attemptingResume},isResumable:function(id){return!!chunking&&handler.isValid(id)&&!handler._getFileState(id).notResumable},moveInProgressToRemaining:function(id,optInProgress,optRemaining){var chunkingState=(handler._getFileState(id)||{}).chunking||{},inProgress=optInProgress||chunkingState.inProgress,remaining=optRemaining||chunkingState.remaining;inProgress&&(log(qq.format("Moving these chunks from in-progress {}, to remaining.",JSON.stringify(inProgress))),inProgress.reverse(),qq.each(inProgress,function(idx,chunkIdx){remaining.unshift(chunkIdx)}),inProgress.length=0)},pause:function(id){if(handler.isValid(id))return log(qq.format("Aborting XHR upload for {} '{}' due to pause instruction.",id,getName(id))),handler._getFileState(id).paused=!0,abort(id),!0},reevaluateChunking:function(id){if(chunking&&handler.isValid(id)){var totalChunks,i,state=handler._getFileState(id);if(delete state.chunking,state.chunking={},(totalChunks=handler._getTotalChunks(id))>1||chunking.mandatory){for(state.chunking.enabled=!0,state.chunking.parts=totalChunks,state.chunking.remaining=[],i=0;i<totalChunks;i++)state.chunking.remaining.push(i);handler._initTempState(id)}else state.chunking.enabled=!1}},updateBlob:function(id,newBlob){handler.isValid(id)&&(handler._getFileState(id).file=newBlob)},_clearXhrs:function(id){var tempState=handler._getFileState(id).temp;qq.each(tempState.ajaxRequesters,function(chunkId){delete tempState.ajaxRequesters[chunkId]}),qq.each(tempState.xhrs,function(chunkId){delete tempState.xhrs[chunkId]})},_createXhr:function(id,optChunkIdx){return handler._registerXhr(id,optChunkIdx,qq.createXhrInstance())},_getAjaxRequester:function(id,optChunkIdx){var chunkIdx=null==optChunkIdx?-1:optChunkIdx;return handler._getFileState(id).temp.ajaxRequesters[chunkIdx]},_getChunkData:function(id,chunkIndex){var chunkSize=getChunkSize(id),fileSize=getSize(id),fileOrBlob=handler.getFile(id),startBytes=chunkSize*chunkIndex,endBytes=startBytes+chunkSize>=fileSize?fileSize:startBytes+chunkSize,totalChunks=handler._getTotalChunks(id),cachedChunks=this._getFileState(id).temp.cachedChunks,blob=cachedChunks[chunkIndex]||qq.sliceBlob(fileOrBlob,startBytes,endBytes);return cachedChunks[chunkIndex]=blob,{part:chunkIndex,start:startBytes,end:endBytes,count:totalChunks,blob:blob,size:endBytes-startBytes}},_getChunkDataForCallback:function(chunkData){return{partIndex:chunkData.part,startByte:chunkData.start+1,endByte:chunkData.end,totalParts:chunkData.count}},_getLocalStorageId:function(id){var name=getName(id),size=getSize(id),chunkSize=getChunkSize(id),endpoint=getEndpoint(id),customKeys=resume.customKeys(id),localStorageId=qq.format("qq{}resume{}-{}-{}-{}-{}",namespace,"5.0",name,size,chunkSize,endpoint);return customKeys.forEach(function(key){localStorageId+="-"+key}),localStorageId},_getMimeType:function(id){return handler.getFile(id).type},_getPersistableData:function(id){return handler._getFileState(id).chunking},_getTotalChunks:function(id){if(chunking){var fileSize=getSize(id),chunkSize=getChunkSize(id);return Math.ceil(fileSize/chunkSize)}},_getXhr:function(id,optChunkIdx){var chunkIdx=null==optChunkIdx?-1:optChunkIdx;return handler._getFileState(id).temp.xhrs[chunkIdx]},_getXhrs:function(id){return handler._getFileState(id).temp.xhrs},_iterateResumeRecords:function(callback){resumeEnabled&&qq.each(localStorage,function(key,item){if(0===key.indexOf(qq.format("qq{}resume",namespace))){var uploadData=JSON.parse(item);callback(key,uploadData)}})},_initTempState:function(id){handler._getFileState(id).temp={ajaxRequesters:{},chunkProgress:{},xhrs:{},cachedChunks:{}}},_markNotResumable:function(id){handler._getFileState(id).notResumable=!0},_maybeDeletePersistedChunkData:function(id){var localStorageId;return!!(resumeEnabled&&handler.isResumable(id)&&(localStorageId=handler._getLocalStorageId(id))&&localStorage.getItem(localStorageId))&&(localStorage.removeItem(localStorageId),!0)},_maybePrepareForResume:function(id){var localStorageId,persistedData,state=handler._getFileState(id);resumeEnabled&&void 0===state.key&&(localStorageId=handler._getLocalStorageId(id),(persistedData=localStorage.getItem(localStorageId))&&(persistedData=JSON.parse(persistedData),getDataByUuid(persistedData.uuid)?handler._markNotResumable(id):(log(qq.format("Identified file with ID {} and name of {} as resumable.",id,getName(id))),onUuidChanged(id,persistedData.uuid),state.key=persistedData.key,state.chunking=persistedData.chunking,state.loaded=persistedData.loaded,state.customResumeData=persistedData.customResumeData,state.attemptingResume=!0,handler.moveInProgressToRemaining(id))))},_maybePersistChunkedState:function(id){var localStorageId,persistedData,state=handler._getFileState(id);if(resumeEnabled&&handler.isResumable(id)){var customResumeData=getCustomResumeData(id);localStorageId=handler._getLocalStorageId(id),persistedData={name:getName(id),size:getSize(id),uuid:getUuid(id),key:state.key,chunking:state.chunking,loaded:state.loaded,lastUpdated:Date.now()},customResumeData&&(persistedData.customResumeData=customResumeData);try{localStorage.setItem(localStorageId,JSON.stringify(persistedData))}catch(error){log(qq.format("Unable to save resume data for '{}' due to error: '{}'.",id,error.toString()),"warn")}}},_registerProgressHandler:function(id,chunkIdx,chunkSize){var xhr=handler._getXhr(id,chunkIdx),name=getName(id),progressCalculator={simple:function(loaded,total){var fileSize=getSize(id);onProgress(id,name,loaded===total?fileSize:loaded>=fileSize?fileSize-1:loaded,fileSize)},chunked:function(loaded,total){var chunkProgress=handler._getFileState(id).temp.chunkProgress,totalSuccessfullyLoadedForFile=handler._getFileState(id).loaded,loadedForRequest=loaded,totalForRequest=total,totalFileSize=getSize(id),estActualChunkLoaded=loadedForRequest-(totalForRequest-chunkSize),totalLoadedForFile=totalSuccessfullyLoadedForFile;chunkProgress[chunkIdx]=estActualChunkLoaded,qq.each(chunkProgress,function(chunkIdx,chunkLoaded){totalLoadedForFile+=chunkLoaded}),onProgress(id,name,totalLoadedForFile,totalFileSize)}};xhr.upload.onprogress=function(e){e.lengthComputable&&progressCalculator[null==chunkSize?"simple":"chunked"](e.loaded,e.total)}},_registerXhr:function(id,optChunkIdx,xhr,optAjaxRequester){var xhrsId=null==optChunkIdx?-1:optChunkIdx,tempState=handler._getFileState(id).temp;return tempState.xhrs=tempState.xhrs||{},tempState.ajaxRequesters=tempState.ajaxRequesters||{},tempState.xhrs[xhrsId]=xhr,optAjaxRequester&&(tempState.ajaxRequesters[xhrsId]=optAjaxRequester),xhr},_removeExpiredChunkingRecords:function(){var expirationDays=resume.recordsExpireIn;handler._iterateResumeRecords(function(key,uploadData){var expirationDate=new Date(uploadData.lastUpdated);expirationDate.setDate(expirationDate.getDate()+expirationDays),expirationDate.getTime()<=Date.now()&&(log("Removing expired resume record with key "+key),localStorage.removeItem(key))})},_shouldChunkThisFile:function(id){var state=handler._getFileState(id);if(state)return state.chunking||handler.reevaluateChunking(id),state.chunking.enabled}})},qq.DeleteFileAjaxRequester=function(o){"use strict";var requester,options={method:"DELETE",uuidParamName:"qquuid",endpointStore:{},maxConnections:3,customHeaders:function(id){return{}},paramsStore:{},cors:{expected:!1,sendCredentials:!1},log:function(str,level){},onDelete:function(id){},onDeleteComplete:function(id,xhrOrXdr,isError){}};qq.extend(options,o),requester=qq.extend(this,new qq.AjaxRequester({acceptHeader:"application/json",validMethods:["POST","DELETE"],method:options.method,endpointStore:options.endpointStore,paramsStore:options.paramsStore,mandatedParams:function getMandatedParams(){return"POST"===options.method.toUpperCase()?{_method:"DELETE"}:{}}(),maxConnections:options.maxConnections,customHeaders:function(id){return options.customHeaders.get(id)},log:options.log,onSend:options.onDelete,onComplete:options.onDeleteComplete,cors:options.cors})),qq.extend(this,{sendDelete:function(id,uuid,additionalMandatedParams){var additionalOptions=additionalMandatedParams||{};options.log("Submitting delete file request for "+id),"DELETE"===options.method?requester.initTransport(id).withPath(uuid).withParams(additionalOptions).send():(additionalOptions[options.uuidParamName]=uuid,requester.initTransport(id).withParams(additionalOptions).send())}})},function(){function renderImageToCanvas(img,blob,canvas,options,doSquash){var modifiedDimensions,iw=img.naturalWidth,ih=img.naturalHeight,width=options.width,height=options.height,ctx=canvas.getContext("2d"),promise=new qq.Promise;return ctx.save(),options.resize?function renderImageToCanvasWithCustomResizer(resizeInfo){var blob=resizeInfo.blob,image=resizeInfo.image,imageHeight=resizeInfo.imageHeight,imageWidth=resizeInfo.imageWidth,orientation=resizeInfo.orientation,promise=new qq.Promise,resize=resizeInfo.resize,sourceCanvas=document.createElement("canvas"),sourceCanvasContext=sourceCanvas.getContext("2d"),targetCanvas=resizeInfo.canvas,targetHeight=resizeInfo.targetHeight,targetWidth=resizeInfo.targetWidth;return transformCoordinate(sourceCanvas,imageWidth,imageHeight,orientation),targetCanvas.height=targetHeight,targetCanvas.width=targetWidth,sourceCanvasContext.drawImage(image,0,0),resize({blob:blob,height:targetHeight,image:image,sourceCanvas:sourceCanvas,targetCanvas:targetCanvas,width:targetWidth}).then(function success(){targetCanvas.qqImageRendered&&targetCanvas.qqImageRendered(),promise.success()},promise.failure),promise}({blob:blob,canvas:canvas,image:img,imageHeight:ih,imageWidth:iw,orientation:options.orientation,resize:options.resize,targetHeight:height,targetWidth:width}):(qq.supportedFeatures.unlimitedScaledImageSize||(modifiedDimensions=function maybeCalculateDownsampledDimensions(spec){if(!qq.ios())throw new qq.Error("Downsampled dimensions can only be reliably calculated for iOS!");if(spec.origHeight*spec.origWidth>5241e3)return{newHeight:Math.round(Math.sqrt(spec.origHeight/spec.origWidth*5241e3)),newWidth:Math.round(Math.sqrt(spec.origWidth/spec.origHeight*5241e3))}}({origWidth:width,origHeight:height}))&&(qq.log(qq.format("Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h",width,height,modifiedDimensions.newWidth,modifiedDimensions.newHeight),"warn"),width=modifiedDimensions.newWidth,height=modifiedDimensions.newHeight),transformCoordinate(canvas,width,height,options.orientation),qq.ios()?function(){(function detectSubsampling(img){var ctx,iw=img.naturalWidth,ih=img.naturalHeight,canvas=document.createElement("canvas");return iw*ih>1048576&&(canvas.width=canvas.height=1,(ctx=canvas.getContext("2d")).drawImage(img,1-iw,0),0===ctx.getImageData(0,0,1,1).data[3])})(img)&&(iw/=2,ih/=2);var tmpCtx,sx,dx,d=1024,tmpCanvas=document.createElement("canvas"),vertSquashRatio=doSquash?function detectVerticalSquash(img,iw,ih){var ctx,data,ratio,canvas=document.createElement("canvas"),sy=0,ey=ih,py=ih;for(canvas.width=1,canvas.height=ih,(ctx=canvas.getContext("2d")).drawImage(img,0,0),data=ctx.getImageData(0,0,1,ih).data;py>sy;)0===data[4*(py-1)+3]?ey=py:sy=py,py=ey+sy>>1;return 0==(ratio=py/ih)?1:ratio}(img,0,ih):1,dw=Math.ceil(d*width/iw),dh=Math.ceil(d*height/ih/vertSquashRatio),sy=0,dy=0;for(tmpCanvas.width=tmpCanvas.height=d,tmpCtx=tmpCanvas.getContext("2d");sy<ih;){for(sx=0,dx=0;sx<iw;)tmpCtx.clearRect(0,0,d,d),tmpCtx.drawImage(img,-sx,-sy),ctx.drawImage(tmpCanvas,0,0,d,d,dx,dy,dw,dh),sx+=d,dx+=dw;sy+=d,dy+=dh}ctx.restore(),tmpCanvas=tmpCtx=null}():ctx.drawImage(img,0,0,width,height),canvas.qqImageRendered&&canvas.qqImageRendered(),promise.success(),promise)}function transformCoordinate(canvas,width,height,orientation){switch(orientation){case 5:case 6:case 7:case 8:canvas.width=height,canvas.height=width;break;default:canvas.width=width,canvas.height=height}var ctx=canvas.getContext("2d");switch(orientation){case 2:ctx.translate(width,0),ctx.scale(-1,1);break;case 3:ctx.translate(width,height),ctx.rotate(Math.PI);break;case 4:ctx.translate(0,height),ctx.scale(1,-1);break;case 5:ctx.rotate(.5*Math.PI),ctx.scale(1,-1);break;case 6:ctx.rotate(.5*Math.PI),ctx.translate(0,-height);break;case 7:ctx.rotate(.5*Math.PI),ctx.translate(width,-height),ctx.scale(-1,1);break;case 8:ctx.rotate(-.5*Math.PI),ctx.translate(-width,0)}}function MegaPixImage(srcImage,errorCallback){var self=this;window.Blob&&srcImage instanceof Blob&&function(){var img=new Image,URL=window.URL&&window.URL.createObjectURL?window.URL:window.webkitURL&&window.webkitURL.createObjectURL?window.webkitURL:null;if(!URL)throw Error("No createObjectURL function found to create blob url");img.src=URL.createObjectURL(srcImage),self.blob=srcImage,srcImage=img}(),srcImage.naturalWidth||srcImage.naturalHeight||(srcImage.onload=function(){var listeners=self.imageLoadListeners;listeners&&(self.imageLoadListeners=null,setTimeout(function(){for(var i=0,len=listeners.length;i<len;i++)listeners[i]()},0))},srcImage.onerror=errorCallback,this.imageLoadListeners=[]),this.srcImage=srcImage}MegaPixImage.prototype.render=function(target,options){options=options||{};var opt,oldTargetSrc,self=this,imgWidth=this.srcImage.naturalWidth,imgHeight=this.srcImage.naturalHeight,width=options.width,height=options.height,maxWidth=options.maxWidth,maxHeight=options.maxHeight,doSquash=!this.blob||"image/jpeg"===this.blob.type,tagName=target.tagName.toLowerCase();this.imageLoadListeners?this.imageLoadListeners.push(function(){self.render(target,options)}):(width&&!height?height=imgHeight*width/imgWidth<<0:height&&!width?width=imgWidth*height/imgHeight<<0:(width=imgWidth,height=imgHeight),maxWidth&&width>maxWidth&&(height=imgHeight*(width=maxWidth)/imgWidth<<0),maxHeight&&height>maxHeight&&(width=imgWidth*(height=maxHeight)/imgHeight<<0),opt={width:width,height:height},qq.each(options,function(optionsKey,optionsValue){opt[optionsKey]=optionsValue}),"img"===tagName?(oldTargetSrc=target.src,function renderImageToDataURL(img,blob,options,doSquash){var canvas=document.createElement("canvas"),mime=options.mime||"image/jpeg",promise=new qq.Promise;return renderImageToCanvas(img,blob,canvas,options,doSquash).then(function(){promise.success(canvas.toDataURL(mime,options.quality||.8))}),promise}(self.srcImage,self.blob,opt,doSquash).then(function(dataUri){target.src=dataUri,oldTargetSrc===target.src&&target.onload()})):"canvas"===tagName&&renderImageToCanvas(this.srcImage,this.blob,target,opt,doSquash),"function"==typeof this.onrender&&this.onrender(target))},qq.MegaPixImage=MegaPixImage}(),qq.ImageGenerator=function(log){"use strict";function isImg(el){return"img"===el.tagName.toLowerCase()}function isCanvas(el){return"canvas"===el.tagName.toLowerCase()}function determineMimeOfFileName(nameWithPath){var pathSegments=nameWithPath.split("/"),name=pathSegments[pathSegments.length-1].split("?")[0],extension=qq.getExtension(name);switch(extension=extension&&extension.toLowerCase()){case"jpeg":case"jpg":return"image/jpeg";case"png":return"image/png";case"bmp":return"image/bmp";case"gif":return"image/gif";case"tiff":case"tif":return"image/tiff"}}function isCrossOrigin(url){var targetProtocol,targetHostname,targetPort,targetAnchor=document.createElement("a");return targetAnchor.href=url,targetProtocol=targetAnchor.protocol,targetPort=targetAnchor.port,targetHostname=targetAnchor.hostname,targetProtocol.toLowerCase()!==window.location.protocol.toLowerCase()||(targetHostname.toLowerCase()!==window.location.hostname.toLowerCase()||targetPort!==window.location.port&&!qq.ie())}function registerThumbnailRenderedListener(imgOrCanvas,promise){var registered=isImg(imgOrCanvas)||isCanvas(imgOrCanvas);return isImg(imgOrCanvas)?function registerImgLoadListeners(img,promise){img.onload=function(){img.onload=null,img.onerror=null,promise.success(img)},img.onerror=function(){img.onload=null,img.onerror=null,log("Problem drawing thumbnail!","error"),promise.failure(img,"Problem drawing thumbnail!")}}(imgOrCanvas,promise):isCanvas(imgOrCanvas)?function registerCanvasDrawImageListener(canvas,promise){canvas.qqImageRendered=function(){promise.success(canvas)}}(imgOrCanvas,promise):(promise.failure(imgOrCanvas),log(qq.format("Element container of type {} is not supported!",imgOrCanvas.tagName),"error")),registered}function drawOnCanvasOrImgFromUrl(url,canvasOrImg,draw,maxSize,customResizeFunction){var tempImg=new Image,tempImgRender=new qq.Promise;registerThumbnailRenderedListener(tempImg,tempImgRender),isCrossOrigin(url)&&(tempImg.crossOrigin="anonymous"),tempImg.src=url,tempImgRender.then(function rendered(){registerThumbnailRenderedListener(canvasOrImg,draw),new qq.MegaPixImage(tempImg).render(canvasOrImg,{maxWidth:maxSize,maxHeight:maxSize,mime:determineMimeOfFileName(url),resize:customResizeFunction})},draw.failure)}function drawOnImgFromUrlWithCssScaling(url,img,draw,maxSize){registerThumbnailRenderedListener(img,draw),qq(img).css({maxWidth:maxSize+"px",maxHeight:maxSize+"px"}),img.src=url}function drawFromUrl(url,container,options){var draw=new qq.Promise,scale=options.scale,maxSize=scale?options.maxSize:null;return scale&&isImg(container)?!function isCanvasSupported(){var canvas=document.createElement("canvas");return canvas.getContext&&canvas.getContext("2d")}()?drawOnImgFromUrlWithCssScaling(url,container,draw,maxSize):isCrossOrigin(url)&&!function isImgCorsSupported(){return void 0!==(new Image).crossOrigin}()?drawOnImgFromUrlWithCssScaling(url,container,draw,maxSize):drawOnCanvasOrImgFromUrl(url,container,draw,maxSize):isCanvas(container)?drawOnCanvasOrImgFromUrl(url,container,draw,maxSize):registerThumbnailRenderedListener(container,draw)&&(container.src=url),draw}qq.extend(this,{generate:function(fileBlobOrUrl,container,options){return qq.isString(fileBlobOrUrl)?(log("Attempting to update thumbnail based on server response."),drawFromUrl(fileBlobOrUrl,container,options||{})):(log("Attempting to draw client-side image preview."),function draw(fileOrBlob,container,options){var drawPreview=new qq.Promise,identifier=new qq.Identify(fileOrBlob,log),maxSize=options.maxSize,orient=null==options.orient||options.orient,megapixErrorHandler=function(){container.onerror=null,container.onload=null,log("Could not render preview, file may be too large!","error"),drawPreview.failure(container,"Browser cannot render image!")};return identifier.isPreviewable().then(function(mime){var dummyExif={parse:function(){return(new qq.Promise).success()}},exif=orient?new qq.Exif(fileOrBlob,log):dummyExif,mpImg=new qq.MegaPixImage(fileOrBlob,megapixErrorHandler);registerThumbnailRenderedListener(container,drawPreview)&&exif.parse().then(function(exif){var orientation=exif&&exif.Orientation;mpImg.render(container,{maxWidth:maxSize,maxHeight:maxSize,orientation:orientation,mime:mime,resize:options.customResizeFunction})},function(failureMsg){log(qq.format("EXIF data could not be parsed ({}).  Assuming orientation = 1.",failureMsg)),mpImg.render(container,{maxWidth:maxSize,maxHeight:maxSize,mime:mime,resize:options.customResizeFunction})})},function(){log("Not previewable"),drawPreview.failure(container,"Not previewable")}),drawPreview}(fileBlobOrUrl,container,options||{}))}}),this._testing={},this._testing.isImg=isImg,this._testing.isCanvas=isCanvas,this._testing.isCrossOrigin=isCrossOrigin,this._testing.determineMimeOfFileName=determineMimeOfFileName},qq.Exif=function(fileOrBlob,log){"use strict";var TAG_IDS=[274],TAG_INFO={274:{name:"Orientation",bytes:2}};function parseLittleEndian(hex){for(var result=0,pow=0;hex.length>0;)result+=parseInt(hex.substring(0,2),16)*Math.pow(2,pow),hex=hex.substring(2,hex.length),pow+=8;return result}function getApp1Offset(){var promise=new qq.Promise;return qq.readBlobToHex(fileOrBlob,0,6).then(function(hex){0!==hex.indexOf("ffd8")?promise.failure("Not a valid JPEG!"):function seekToApp1(offset,promise){var theOffset=offset,thePromise=promise;return void 0===theOffset&&(theOffset=2,thePromise=new qq.Promise),qq.readBlobToHex(fileOrBlob,theOffset,4).then(function(hex){var segmentLength,match=/^ffe([0-9])/.exec(hex);match?"1"!==match[1]?(segmentLength=parseInt(hex.slice(4,8),16),seekToApp1(theOffset+segmentLength+2,thePromise)):thePromise.success(theOffset):thePromise.failure("No EXIF header to be found!")}),thePromise}().then(function(offset){promise.success(offset)},function(error){promise.failure(error)})}),promise}qq.extend(this,{parse:function(){var parser=new qq.Promise,onParseFailure=function(message){log(qq.format("EXIF header parse failed: '{}' ",message)),parser.failure(message)};return getApp1Offset().then(function(app1Offset){log(qq.format("Moving forward with EXIF header parsing for '{}'",void 0===fileOrBlob.name?"blob":fileOrBlob.name)),function isLittleEndian(app1Start){var promise=new qq.Promise;return qq.readBlobToHex(fileOrBlob,app1Start+10,2).then(function(hex){promise.success("4949"===hex)}),promise}(app1Offset).then(function(littleEndian){log(qq.format("EXIF Byte order is {} endian",littleEndian?"little":"big")),function getDirEntryCount(app1Start,littleEndian){var promise=new qq.Promise;return qq.readBlobToHex(fileOrBlob,app1Start+18,2).then(function(hex){if(littleEndian)return promise.success(parseLittleEndian(hex));promise.success(parseInt(hex,16))}),promise}(app1Offset,littleEndian).then(function(dirEntryCount){log(qq.format("Found {} APP1 directory entries",dirEntryCount)),function getIfd(app1Start,dirEntries){var offset=app1Start+20,bytes=12*dirEntries;return qq.readBlobToHex(fileOrBlob,offset,bytes)}(app1Offset,dirEntryCount).then(function(ifdHex){var dirEntries=function getDirEntries(ifdHex){for(var entries=[],offset=0;offset+24<=ifdHex.length;)entries.push(ifdHex.slice(offset,offset+24)),offset+=24;return entries}(ifdHex),tagValues=function getTagValues(littleEndian,dirEntries){var tagsToFind=qq.extend([],TAG_IDS),vals={};return qq.each(dirEntries,function(idx,entry){var tagValHex,tagName,tagValLength,idHex=entry.slice(0,4),id=littleEndian?parseLittleEndian(idHex):parseInt(idHex,16),tagsToFindIdx=tagsToFind.indexOf(id);if(tagsToFindIdx>=0&&(tagName=TAG_INFO[id].name,tagValLength=TAG_INFO[id].bytes,tagValHex=entry.slice(16,16+2*tagValLength),vals[tagName]=littleEndian?parseLittleEndian(tagValHex):parseInt(tagValHex,16),tagsToFind.splice(tagsToFindIdx,1)),0===tagsToFind.length)return!1}),vals}(littleEndian,dirEntries);log("Successfully parsed some EXIF tags"),parser.success(tagValues)},onParseFailure)},onParseFailure)},onParseFailure)},onParseFailure),parser}}),this._testing={},this._testing.parseLittleEndian=parseLittleEndian},qq.Identify=function(fileOrBlob,log){"use strict";qq.extend(this,{isPreviewable:function(){var self=this,identifier=new qq.Promise,previewable=!1,name=void 0===fileOrBlob.name?"blob":fileOrBlob.name;return log(qq.format("Attempting to determine if {} can be rendered in this browser",name)),log("First pass: check type attribute of blob object."),this.isPreviewableSync()?(log("Second pass: check for magic bytes in file header."),qq.readBlobToHex(fileOrBlob,0,4).then(function(hex){qq.each(self.PREVIEWABLE_MIME_TYPES,function(mime,bytes){if(function isIdentifiable(magicBytes,questionableBytes){var identifiable=!1,magicBytesEntries=[].concat(magicBytes);return qq.each(magicBytesEntries,function(idx,magicBytesArrayEntry){if(0===questionableBytes.indexOf(magicBytesArrayEntry))return identifiable=!0,!1}),identifiable}(bytes,hex))return("image/tiff"!==mime||qq.supportedFeatures.tiffPreviews)&&(previewable=!0,identifier.success(mime)),!1}),log(qq.format("'{}' is {} able to be rendered in this browser",name,previewable?"":"NOT")),previewable||identifier.failure()},function(){log("Error reading file w/ name '"+name+"'.  Not able to be rendered in this browser."),identifier.failure()})):identifier.failure(),identifier},isPreviewableSync:function(){var fileMime=fileOrBlob.type,isRecognizedImage=qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES),fileMime)>=0,previewable=!1,name=void 0===fileOrBlob.name?"blob":fileOrBlob.name;return isRecognizedImage&&(previewable="image/tiff"!==fileMime||qq.supportedFeatures.tiffPreviews),!previewable&&log(name+" is not previewable in this browser per the blob's type attr"),previewable}})},qq.Identify.prototype.PREVIEWABLE_MIME_TYPES={"image/jpeg":"ffd8ff","image/gif":"474946","image/png":"89504e","image/bmp":"424d","image/tiff":["49492a00","4d4d002a"]},qq.ImageValidation=function(blob,log){"use strict";this.validate=function(limits){var validationEffort=new qq.Promise;return log("Attempting to validate image."),!function hasNonZeroLimits(limits){var atLeastOne=!1;return qq.each(limits,function(limit,value){if(value>0)return atLeastOne=!0,!1}),atLeastOne}(limits)?validationEffort.success():function getWidthHeight(){var sizeDetermination=new qq.Promise;return new qq.Identify(blob,log).isPreviewable().then(function(){var image=new Image,url=window.URL&&window.URL.createObjectURL?window.URL:window.webkitURL&&window.webkitURL.createObjectURL?window.webkitURL:null;url?(image.onerror=function(){log("Cannot determine dimensions for image.  May be too large.","error"),sizeDetermination.failure()},image.onload=function(){sizeDetermination.success({width:this.width,height:this.height})},image.src=url.createObjectURL(blob)):(log("No createObjectURL function available to generate image URL!","error"),sizeDetermination.failure())},sizeDetermination.failure),sizeDetermination}().then(function(dimensions){var failingLimit=function getFailingLimit(limits,dimensions){var failingLimit;return qq.each(limits,function(limitName,limitValue){if(limitValue>0){var limitMatcher=/(max|min)(Width|Height)/.exec(limitName),dimensionPropName=limitMatcher[2].charAt(0).toLowerCase()+limitMatcher[2].slice(1),actualValue=dimensions[dimensionPropName];switch(limitMatcher[1]){case"min":if(actualValue<limitValue)return failingLimit=limitName,!1;break;case"max":if(actualValue>limitValue)return failingLimit=limitName,!1}}}),failingLimit}(limits,dimensions);failingLimit?validationEffort.failure(failingLimit):validationEffort.success()},validationEffort.success),validationEffort}},qq.Session=function(spec){"use strict";var options={endpoint:null,params:{},customHeaders:{},cors:{},addFileRecord:function(sessionData){},log:function(message,level){}};function handleFileItems(fileItems,success,xhrOrXdr,promise){var someItemsIgnored=!1;(success=success&&function isJsonResponseValid(response){if(qq.isArray(response))return!0;options.log("Session response is not an array.","error")}(fileItems))&&qq.each(fileItems,function(idx,fileItem){if(null==fileItem.uuid)someItemsIgnored=!0,options.log(qq.format("Session response item {} did not include a valid UUID - ignoring.",idx),"error");else if(null==fileItem.name)someItemsIgnored=!0,options.log(qq.format("Session response item {} did not include a valid name - ignoring.",idx),"error");else try{return options.addFileRecord(fileItem),!0}catch(err){someItemsIgnored=!0,options.log(err.message,"error")}return!1}),promise[success&&!someItemsIgnored?"success":"failure"](fileItems,xhrOrXdr)}qq.extend(options,spec,!0),this.refresh=function(){var refreshEffort=new qq.Promise,requesterOptions=qq.extend({},options);return new qq.SessionAjaxRequester(qq.extend(requesterOptions,{onComplete:function(response,success,xhrOrXdr){handleFileItems(response,success,xhrOrXdr,refreshEffort)}})).queryServer(),refreshEffort}},qq.SessionAjaxRequester=function(spec){"use strict";var requester,options={endpoint:null,customHeaders:{},params:{},cors:{expected:!1,sendCredentials:!1},onComplete:function(response,success,xhrOrXdr){},log:function(str,level){}};qq.extend(options,spec),requester=qq.extend(this,new qq.AjaxRequester({acceptHeader:"application/json",validMethods:["GET"],method:"GET",endpointStore:{get:function(){return options.endpoint}},customHeaders:options.customHeaders,log:options.log,onComplete:function onComplete(id,xhrOrXdr,isError){var response=null;if(null!=xhrOrXdr.responseText)try{response=qq.parseJson(xhrOrXdr.responseText)}catch(err){options.log("Problem parsing session response: "+err.message,"error"),isError=!0}options.onComplete(response,!isError,xhrOrXdr)},cors:options.cors})),qq.extend(this,{queryServer:function(){var params=qq.extend({},options.params);options.log("Session query request."),requester.initTransport("sessionRefresh").withParams(params).withCacheBuster().send()}})},qq.Scaler=function(spec,log){"use strict";var customResizeFunction=spec.customResizer,includeOriginal=spec.sendOriginal,orient=spec.orient,defaultType=spec.defaultType,defaultQuality=spec.defaultQuality/100,failedToScaleText=spec.failureText,includeExif=spec.includeExif,sizes=this._getSortedSizes(spec.sizes);qq.extend(this,{enabled:qq.supportedFeatures.scaling&&sizes.length>0,getFileRecords:function(originalFileUuid,originalFileName,originalBlobOrBlobData){var self=this,records=[],originalBlob=originalBlobOrBlobData.blob?originalBlobOrBlobData.blob:originalBlobOrBlobData;return new qq.Identify(originalBlob,log).isPreviewableSync()?(qq.each(sizes,function(idx,sizeRecord){var outputType=self._determineOutputType({defaultType:defaultType,requestedType:sizeRecord.type,refType:originalBlob.type});records.push({uuid:qq.getUniqueId(),name:self._getName(originalFileName,{name:sizeRecord.name,type:outputType,refType:originalBlob.type}),blob:new qq.BlobProxy(originalBlob,qq.bind(self._generateScaledImage,self,{customResizeFunction:customResizeFunction,maxSize:sizeRecord.maxSize,orient:orient,type:outputType,quality:defaultQuality,failedText:failedToScaleText,includeExif:includeExif,log:log}))})}),records.push({uuid:originalFileUuid,name:originalFileName,size:originalBlob.size,blob:includeOriginal?originalBlob:null})):records.push({uuid:originalFileUuid,name:originalFileName,size:originalBlob.size,blob:originalBlob}),records},handleNewFile:function(file,name,uuid,size,fileList,batchId,uuidParamName,api){file.qqButtonId||file.blob&&file.blob.qqButtonId;var param,scaledIds=[],originalId=null,addFileToHandler=api.addFileToHandler,uploadData=api.uploadData,paramsStore=api.paramsStore,proxyGroupId=qq.getUniqueId();qq.each(this.getFileRecords(uuid,name,file),function(idx,record){var id,blobSize=record.size;record.blob instanceof qq.BlobProxy&&(blobSize=-1),id=uploadData.addFile({uuid:record.uuid,name:record.name,size:blobSize,batchId:batchId,proxyGroupId:proxyGroupId}),record.blob instanceof qq.BlobProxy?scaledIds.push(id):originalId=id,record.blob?(addFileToHandler(id,record.blob),fileList.push({id:id,file:record.blob})):uploadData.setStatus(id,qq.status.REJECTED)}),null!==originalId&&(qq.each(scaledIds,function(idx,scaledId){var params={qqparentuuid:uploadData.retrieve({id:originalId}).uuid,qqparentsize:uploadData.retrieve({id:originalId}).size};params[uuidParamName]=uploadData.retrieve({id:scaledId}).uuid,uploadData.setParentId(scaledId,originalId),paramsStore.addReadOnly(scaledId,params)}),scaledIds.length&&((param={})[uuidParamName]=uploadData.retrieve({id:originalId}).uuid,paramsStore.addReadOnly(originalId,param)))}})},qq.extend(qq.Scaler.prototype,{scaleImage:function(id,specs,api){"use strict";if(!qq.supportedFeatures.scaling)throw new qq.Error("Scaling is not supported in this browser!");var scalingEffort=new qq.Promise,log=api.log,file=api.getFile(id),uploadData=api.uploadData.retrieve({id:id}),name=uploadData&&uploadData.name,uuid=uploadData&&uploadData.uuid,scalingOptions={customResizer:specs.customResizer,sendOriginal:!1,orient:specs.orient,defaultType:specs.type||null,defaultQuality:specs.quality,failedToScaleText:"Unable to scale",sizes:[{name:"",maxSize:specs.maxSize}]},scaler=new qq.Scaler(scalingOptions,log);return qq.Scaler&&qq.supportedFeatures.imagePreviews&&file?qq.bind(function(){var record=scaler.getFileRecords(uuid,name,file)[0];record&&record.blob instanceof qq.BlobProxy?record.blob.create().then(scalingEffort.success,scalingEffort.failure):(log(id+" is not a scalable image!","error"),scalingEffort.failure())},this)():(scalingEffort.failure(),log("Could not generate requested scaled image for "+id+".  Scaling is either not possible in this browser, or the file could not be located.","error")),scalingEffort},_determineOutputType:function(spec){"use strict";var requestedType=spec.requestedType,defaultType=spec.defaultType,referenceType=spec.refType;return defaultType||requestedType?requestedType&&qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES),requestedType)>=0?"image/tiff"===requestedType?qq.supportedFeatures.tiffPreviews?requestedType:defaultType:requestedType:defaultType:"image/jpeg"!==referenceType?"image/png":referenceType},_getName:function(originalName,scaledVersionProperties){"use strict";var startOfExt=originalName.lastIndexOf("."),versionType=scaledVersionProperties.type||"image/png",referenceType=scaledVersionProperties.refType,scaledName="",scaledExt=qq.getExtension(originalName),nameAppendage="";return scaledVersionProperties.name&&scaledVersionProperties.name.trim().length&&(nameAppendage=" ("+scaledVersionProperties.name+")"),startOfExt>=0?(scaledName=originalName.substr(0,startOfExt),referenceType!==versionType&&(scaledExt=versionType.split("/")[1]),scaledName+=nameAppendage+"."+scaledExt):scaledName=originalName+nameAppendage,scaledName},_getSortedSizes:function(sizes){"use strict";return(sizes=qq.extend([],sizes)).sort(function(a,b){return a.maxSize>b.maxSize?1:a.maxSize<b.maxSize?-1:0})},_generateScaledImage:function(spec,sourceFile){"use strict";var self=this,customResizeFunction=spec.customResizeFunction,log=spec.log,maxSize=spec.maxSize,orient=spec.orient,type=spec.type,quality=spec.quality,failedText=spec.failedText,includeExif=spec.includeExif&&"image/jpeg"===sourceFile.type&&"image/jpeg"===type,scalingEffort=new qq.Promise,imageGenerator=new qq.ImageGenerator(log),canvas=document.createElement("canvas");return log("Attempting to generate scaled version for "+sourceFile.name),imageGenerator.generate(sourceFile,canvas,{maxSize:maxSize,orient:orient,customResizeFunction:customResizeFunction}).then(function(){var scaledImageDataUri=canvas.toDataURL(type,quality),signalSuccess=function(){log("Success generating scaled version for "+sourceFile.name);var blob=qq.dataUriToBlob(scaledImageDataUri);scalingEffort.success(blob)};includeExif?self._insertExifHeader(sourceFile,scaledImageDataUri,log).then(function(scaledImageDataUriWithExif){scaledImageDataUri=scaledImageDataUriWithExif,signalSuccess()},function(){log("Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.","error"),signalSuccess()}):signalSuccess()},function(){log("Failed attempt to generate scaled version for "+sourceFile.name,"error"),scalingEffort.failure(failedText)}),scalingEffort},_insertExifHeader:function(originalImage,scaledImageDataUri,log){"use strict";var reader=new FileReader,insertionEffort=new qq.Promise,originalImageDataUri="";return reader.onload=function(){originalImageDataUri=reader.result,insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri,scaledImageDataUri))},reader.onerror=function(){log("Problem reading "+originalImage.name+" during attempt to transfer EXIF data to scaled version.","error"),insertionEffort.failure()},reader.readAsDataURL(originalImage),insertionEffort},_dataUriToBlob:function(dataUri){"use strict";var byteString,mimeString,arrayBuffer,intArray;return byteString=dataUri.split(",")[0].indexOf("base64")>=0?atob(dataUri.split(",")[1]):decodeURI(dataUri.split(",")[1]),mimeString=dataUri.split(",")[0].split(":")[1].split(";")[0],arrayBuffer=new ArrayBuffer(byteString.length),intArray=new Uint8Array(arrayBuffer),qq.each(byteString,function(idx,character){intArray[idx]=character.charCodeAt(0)}),this._createBlob(arrayBuffer,mimeString)},_createBlob:function(data,mime){"use strict";var BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,blobBuilder=BlobBuilder&&new BlobBuilder;return blobBuilder?(blobBuilder.append(data),blobBuilder.getBlob(mime)):new Blob([data],{type:mime})}}),qq.ExifRestorer=(ExifRestorer={KEY_STR:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode64:function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0;do{enc1=(chr1=input[i++])>>2,enc2=(3&chr1)<<4|(chr2=input[i++])>>4,enc3=(15&chr2)<<2|(chr3=input[i++])>>6,enc4=63&chr3,isNaN(chr2)?enc3=enc4=64:isNaN(chr3)&&(enc4=64),output=output+this.KEY_STR.charAt(enc1)+this.KEY_STR.charAt(enc2)+this.KEY_STR.charAt(enc3)+this.KEY_STR.charAt(enc4),chr1=chr2=chr3="",enc1=enc2=enc3=enc4=""}while(i<input.length);return output},restore:function(origFileBase64,resizedFileBase64){if(!origFileBase64.match("data:image/jpeg;base64,"))return resizedFileBase64;var rawImage=this.decode64(origFileBase64.replace("data:image/jpeg;base64,","")),segments=this.slice2Segments(rawImage),image=this.exifManipulation(resizedFileBase64,segments);return"data:image/jpeg;base64,"+this.encode64(image)},exifManipulation:function(resizedFileBase64,segments){var exifArray=this.getExifArray(segments),newImageArray=this.insertExif(resizedFileBase64,exifArray);return new Uint8Array(newImageArray)},getExifArray:function(segments){for(var seg,x=0;x<segments.length;x++)if(255==(seg=segments[x])[0]&225==seg[1])return seg;return[]},insertExif:function(resizedFileBase64,exifArray){var imageData=resizedFileBase64.replace("data:image/jpeg;base64,",""),buf=this.decode64(imageData),separatePoint=buf.indexOf(255,3),mae=buf.slice(0,separatePoint),ato=buf.slice(separatePoint),array=mae;return array=(array=array.concat(exifArray)).concat(ato)},slice2Segments:function(rawImageArray){for(var head=0,segments=[];!(255==rawImageArray[head]&218==rawImageArray[head+1]);){if(255==rawImageArray[head]&216==rawImageArray[head+1])head+=2;else{var endPoint=head+(256*rawImageArray[head+2]+rawImageArray[head+3])+2,seg=rawImageArray.slice(head,endPoint);segments.push(seg),head=endPoint}if(head>rawImageArray.length)break}return segments},decode64:function(input){var chr1,chr2,enc2,enc3,chr3="",enc4="",i=0,buf=[];if(/[^A-Za-z0-9\+\/\=]/g.exec(input))throw new Error("There were invalid base64 characters in the input text.  Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='");input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{chr1=this.KEY_STR.indexOf(input.charAt(i++))<<2|(enc2=this.KEY_STR.indexOf(input.charAt(i++)))>>4,chr2=(15&enc2)<<4|(enc3=this.KEY_STR.indexOf(input.charAt(i++)))>>2,chr3=(3&enc3)<<6|(enc4=this.KEY_STR.indexOf(input.charAt(i++))),buf.push(chr1),64!=enc3&&buf.push(chr2),64!=enc4&&buf.push(chr3),chr1=chr2=chr3="",enc2=enc3=enc4=""}while(i<input.length);return buf}},ExifRestorer),qq.TotalProgress=function(callback,getSize){"use strict";var perFileProgress={},totalLoaded=0,totalSize=0,lastLoadedSent=-1,lastTotalSent=-1,callbackProxy=function(loaded,total){loaded===lastLoadedSent&&total===lastTotalSent||callback(loaded,total),lastLoadedSent=loaded,lastTotalSent=total},onNew=function(id){var size=getSize(id);size>0&&(updateTotalProgress(id,0,size),perFileProgress[id]={loaded:0,total:size})},updateTotalProgress=function(id,newLoaded,newTotal){var oldLoaded=perFileProgress[id]?perFileProgress[id].loaded:0,oldTotal=perFileProgress[id]?perFileProgress[id].total:0;-1===newLoaded&&-1===newTotal?(totalLoaded-=oldLoaded,totalSize-=oldTotal):(newLoaded&&(totalLoaded+=newLoaded-oldLoaded),newTotal&&(totalSize+=newTotal-oldTotal)),callbackProxy(totalLoaded,totalSize)};qq.extend(this,{onAllComplete:function(successful,failed,retryable){(0===failed.length||function(failed,retryable){var none=!0;return qq.each(failed,function(idx,failedId){if(qq.indexOf(retryable,failedId)>=0)return none=!1,!1}),none}(failed,retryable))&&(callbackProxy(totalSize,totalSize),this.reset())},onStatusChange:function(id,oldStatus,newStatus){newStatus===qq.status.CANCELED||newStatus===qq.status.REJECTED?function(id){updateTotalProgress(id,-1,-1),delete perFileProgress[id]}(id):newStatus===qq.status.SUBMITTING&&onNew(id)},onIndividualProgress:function(id,loaded,total){updateTotalProgress(id,loaded,total),perFileProgress[id]={loaded:loaded,total:total}},onNewSize:function(id){onNew(id)},reset:function(){perFileProgress={},totalLoaded=0,totalSize=0}})},qq.PasteSupport=function(o){"use strict";var options,detachPasteHandler;options={targetElement:null,callbacks:{log:function(message,level){},pasteReceived:function(blob){}}},qq.extend(options,o),function registerPasteHandler(){detachPasteHandler=qq(options.targetElement).attach("paste",function(event){var clipboardData=event.clipboardData;clipboardData&&qq.each(clipboardData.items,function(idx,item){if(function isImage(item){return item.type&&0===item.type.indexOf("image/")}(item)){var blob=item.getAsFile();options.callbacks.pasteReceived(blob)}})})}(),qq.extend(this,{reset:function(){!function unregisterPasteHandler(){detachPasteHandler&&detachPasteHandler()}()}})},qq.FormSupport=function(options,startUpload,log){"use strict";var self=this,interceptSubmit=options.interceptSubmit,formEl=options.element,autoUpload=options.autoUpload;function validateForm(formEl,nativeSubmit){if(!formEl.checkValidity||formEl.checkValidity())return!0;log("Form did not pass validation checks - will not upload.","error"),nativeSubmit()}qq.extend(this,{newEndpoint:null,newAutoUpload:autoUpload,attachedToForm:!1,getFormInputsAsObject:function(){return null==formEl?null:self._form2Obj(formEl)}}),formEl=function determineFormEl(formEl){return formEl&&(qq.isString(formEl)&&(formEl=document.getElementById(formEl)),formEl&&(log("Attaching to form element."),function determineNewEndpoint(formEl){formEl.getAttribute("action")&&(self.newEndpoint=formEl.getAttribute("action"))}(formEl),interceptSubmit&&function maybeUploadOnSubmit(formEl){var nativeSubmit=formEl.submit;qq(formEl).attach("submit",function(event){(event=event||window.event).preventDefault?event.preventDefault():event.returnValue=!1,validateForm(formEl,nativeSubmit)&&startUpload()}),formEl.submit=function(){validateForm(formEl,nativeSubmit)&&startUpload()}}(formEl))),formEl}(formEl),this.attachedToForm=!!formEl},qq.extend(qq.FormSupport.prototype,{_form2Obj:function(form){"use strict";var obj={},ignoreValue=function(el){return type=el.type,qq.indexOf(["checkbox","radio"],type.toLowerCase())>=0&&!el.checked||el.disabled&&"hidden"!==el.type.toLowerCase();var type};return qq.each(form.elements,function(idx,el){if((qq.isInput(el,!0)||"textarea"===el.tagName.toLowerCase())&&(type=el.type,qq.indexOf(["button","image","reset","submit"],type.toLowerCase())<0)&&!ignoreValue(el))obj[el.name]=el.value;else if("select"===el.tagName.toLowerCase()&&!ignoreValue(el)){var value=function(select){var value=null;return qq.each(qq(select).children(),function(idx,child){if("option"===child.tagName.toLowerCase()&&child.selected)return value=child.value,!1}),value}(el);null!==value&&(obj[el.name]=value)}var type}),obj}}),qq.traditional=qq.traditional||{},qq.traditional.FormUploadHandler=function(options,proxy){"use strict";var handler=this,getName=proxy.getName,getUuid=proxy.getUuid,log=proxy.log;this.uploadFile=function(id){var form,input=handler.getInput(id),iframe=handler._createIframe(id),promise=new qq.Promise;return(form=function createForm(id,iframe){var params=options.paramsStore.get(id),method="get"===options.method.toLowerCase()?"GET":"POST",endpoint=options.endpointStore.get(id),name=getName(id);return params[options.uuidName]=getUuid(id),params[options.filenameParam]=name,handler._initFormForUpload({method:method,endpoint:endpoint,params:params,paramsInBody:options.paramsInBody,targetName:iframe.name})}(id,iframe)).appendChild(input),handler._attachLoadEvent(iframe,function(responseFromMessage){log("iframe loaded");var response=responseFromMessage||function getIframeContentJson(id,iframe){var response,doc,innerHtml;try{innerHtml=(doc=iframe.contentDocument||iframe.contentWindow.document).body.innerHTML,log("converting iframe's innerHTML to JSON"),log("innerHTML = "+innerHtml),innerHtml&&innerHtml.match(/^<pre/i)&&(innerHtml=doc.body.firstChild.firstChild.nodeValue),response=handler._parseJsonResponse(innerHtml)}catch(error){log("Error when attempting to parse form upload response ("+error.message+")","error"),response={success:!1}}return response}(0,iframe);handler._detachLoadEvent(id),options.cors.expected||qq(iframe).remove(),response.success?promise.success(response):promise.failure(response)}),log("Sending upload request for "+id),form.submit(),qq(form).remove(),promise},qq.extend(this,new qq.FormUploadHandler({options:{isCors:options.cors.expected,inputName:options.inputName},proxy:{onCancel:options.onCancel,getName:getName,getUuid:getUuid,log:log}}))},qq.traditional=qq.traditional||{},qq.traditional.XhrUploadHandler=function(spec,proxy){"use strict";var handler=this,getName=proxy.getName,getSize=proxy.getSize,getUuid=proxy.getUuid,log=proxy.log,multipart=spec.forceMultipart||spec.paramsInBody,allChunksDoneRequester=new qq.traditional.AllChunksDoneAjaxRequester({cors:spec.cors,endpoint:spec.chunking.success.endpoint,headers:spec.chunking.success.headers,jsonPayload:spec.chunking.success.jsonPayload,log:log,method:spec.chunking.success.method,params:spec.chunking.success.params}),createReadyStateChangedHandler=function(id,xhr){var promise=new qq.Promise;return xhr.onreadystatechange=function(){if(4===xhr.readyState){var result=onUploadOrChunkComplete(id,xhr);result.success?promise.success(result.response,xhr):promise.failure(result.response,xhr)}},promise},onUploadOrChunkComplete=function(id,xhr){var response;return log("xhr - server response received for "+id),log("responseText = "+xhr.responseText),{success:!function(xhr,response){return qq.indexOf([200,201,202,203,204],xhr.status)<0||spec.requireSuccessJson&&!response.success||response.reset}(xhr,response=parseResponse(!0,xhr)),response:response}},parseResponse=function(upload,xhr){var response={};try{log(qq.format("Received response status {} with body: {}",xhr.status,xhr.responseText)),response=qq.parseJson(xhr.responseText)}catch(error){upload&&spec.requireSuccessJson&&log("Error when attempting to parse xhr response text ("+error.message+")","error")}return response},sendChunksCompleteRequest=function(id){var promise=new qq.Promise;return allChunksDoneRequester.complete(id,handler._createXhr(id),function(id){var params=spec.paramsStore.get(id),name=getName(id),size=getSize(id);return params[spec.uuidName]=getUuid(id),params[spec.filenameParam]=name,params[spec.totalFileSizeName]=size,params[spec.chunking.paramNames.totalParts]=handler._getTotalChunks(id),params}(id),spec.customHeaders.get(id)).then(function(xhr){promise.success(parseResponse(!1,xhr),xhr)},function(xhr){promise.failure(parseResponse(!1,xhr),xhr)}),promise},setParamsAndGetEntityToSend=function(entityToSendParams){var params,fileOrBlob=entityToSendParams.fileOrBlob,id=entityToSendParams.id,xhr=entityToSendParams.xhr,xhrOverrides=entityToSendParams.xhrOverrides||{},customParams=entityToSendParams.customParams||{},defaultParams=entityToSendParams.params||{},xhrOverrideParams=xhrOverrides.params||{},formData=multipart?new FormData:null,method=xhrOverrides.method||spec.method,endpoint=xhrOverrides.endpoint||spec.endpointStore.get(id),name=getName(id),size=getSize(id);return spec.omitDefaultParams?(params=qq.extend({},customParams),qq.extend(params,xhrOverrideParams)):(params=qq.extend({},customParams),qq.extend(params,xhrOverrideParams),qq.extend(params,defaultParams),params[spec.uuidName]=getUuid(id),params[spec.filenameParam]=name,multipart?params[spec.totalFileSizeName]=size:spec.paramsInBody||(params[spec.inputName]=name)),spec.paramsInBody||(endpoint=qq.obj2url(params,endpoint)),xhr.open(method,endpoint,!0),spec.cors.expected&&spec.cors.sendCredentials&&(xhr.withCredentials=!0),multipart?(spec.paramsInBody&&qq.obj2FormData(params,formData),formData.append(spec.inputName,fileOrBlob),formData):fileOrBlob},setUploadHeaders=function(headersOptions){var headerOverrides=headersOptions.headerOverrides,id=headersOptions.id,xhr=headersOptions.xhr;if(headerOverrides)qq.each(headerOverrides,function(headerName,headerValue){xhr.setRequestHeader(headerName,headerValue)});else{var extraHeaders=spec.customHeaders.get(id),fileOrBlob=handler.getFile(id);xhr.setRequestHeader("Accept","application/json"),xhr.setRequestHeader("X-Requested-With","XMLHttpRequest"),xhr.setRequestHeader("Cache-Control","no-cache"),multipart||(xhr.setRequestHeader("Content-Type","application/octet-stream"),xhr.setRequestHeader("X-Mime-Type",fileOrBlob.type)),qq.each(extraHeaders,function(name,val){xhr.setRequestHeader(name,val)})}};qq.extend(this,{uploadChunk:function(uploadChunkParams){var promise,toSend,customParams,id=uploadChunkParams.id,chunkIdx=uploadChunkParams.chunkIdx,overrides=uploadChunkParams.overrides||{},resuming=uploadChunkParams.resuming,chunkData=handler._getChunkData(id,chunkIdx),xhr=handler._createXhr(id,chunkIdx),params={};return promise=createReadyStateChangedHandler(id,xhr),handler._registerProgressHandler(id,chunkIdx,chunkData.size),customParams=spec.paramsStore.get(id),function(id,params,chunkData){var size=getSize(id),name=getName(id);spec.omitDefaultParams||(params[spec.chunking.paramNames.partIndex]=chunkData.part,params[spec.chunking.paramNames.partByteOffset]=chunkData.start,params[spec.chunking.paramNames.chunkSize]=chunkData.size,params[spec.chunking.paramNames.totalParts]=chunkData.count,params[spec.totalFileSizeName]=size),multipart&&!spec.omitDefaultParams&&(params[spec.filenameParam]=name)}(id,params,chunkData),resuming&&(params[spec.resume.paramNames.resuming]=!0),toSend=setParamsAndGetEntityToSend({fileOrBlob:chunkData.blob,id:id,customParams:customParams,params:params,xhr:xhr,xhrOverrides:overrides}),setUploadHeaders({headerOverrides:overrides.headers,id:id,xhr:xhr}),xhr.send(toSend),promise},uploadFile:function(id){var promise,xhr,customParams,toSend,fileOrBlob=handler.getFile(id);return xhr=handler._createXhr(id),handler._registerProgressHandler(id),promise=createReadyStateChangedHandler(id,xhr),customParams=spec.paramsStore.get(id),toSend=setParamsAndGetEntityToSend({fileOrBlob:fileOrBlob,id:id,customParams:customParams,xhr:xhr}),setUploadHeaders({id:id,xhr:xhr}),xhr.send(toSend),promise}}),qq.extend(this,new qq.XhrUploadHandler({options:qq.extend({namespace:"traditional"},spec),proxy:qq.extend({getEndpoint:spec.endpointStore.get},proxy)})),qq.override(this,function(super_){return{finalizeChunks:function(id){return proxy.onFinalizing(id),spec.chunking.success.endpoint?sendChunksCompleteRequest(id):super_.finalizeChunks(id,qq.bind(parseResponse,this,!0))}}})},qq.traditional.AllChunksDoneAjaxRequester=function(o){"use strict";var requester,options={cors:{allowXdr:!1,expected:!1,sendCredentials:!1},endpoint:null,log:function(str,level){},method:"POST"},promises={},endpointHandler={get:function(id){return qq.isFunction(options.endpoint)?options.endpoint(id):options.endpoint}};qq.extend(options,o),requester=qq.extend(this,new qq.AjaxRequester({acceptHeader:"application/json",contentType:options.jsonPayload?"application/json":"application/x-www-form-urlencoded",validMethods:[options.method],method:options.method,endpointStore:endpointHandler,allowXRequestedWithAndCacheControl:!1,cors:options.cors,log:options.log,onComplete:function(id,xhr,isError){var promise=promises[id];delete promises[id],isError?promise.failure(xhr):promise.success(xhr)}})),qq.extend(this,{complete:function(id,xhr,params,headers){var promise=new qq.Promise;return options.log("Submitting All Chunks Done request for "+id),promises[id]=promise,requester.initTransport(id).withParams(options.params(id)||params).withHeaders(options.headers(id)||headers).send(xhr),promise}})}}(window)}});